<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Oxide.Ext.Discord</name>
    </assembly>
    <members>
        <member name="T:Oxide.Ext.Discord.Attributes.GuildCommandAttribute">
            <summary>
            Used to identify guild bot commands
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Attributes.GuildCommandAttribute.Name">
            <summary>
            Name of the command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.GuildCommandAttribute.#ctor(System.String)">
            <summary>
            Constructor for a guild command
            </summary>
            <param name="name">Name of the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.DiscordClientAttribute">
            <summary>
            Used to identify which field in a plugin to create a discord client for and set the client to.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Attributes.DirectMessageCommandAttribute">
            <summary>
            Used to identify direct message bot commands
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Attributes.DirectMessageCommandAttribute.Name">
            <summary>
            Name of the command
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Attributes.DirectMessageCommandAttribute.#ctor(System.String)">
            <summary>
            Constructor for a direct message command
            </summary>
            <param name="name">Name of the command</param>
        </member>
        <member name="T:Oxide.Ext.Discord.BotClient">
            <summary>
            Represents a bot that is connected to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.ActiveBots">
            <summary>
            List of active bots by bot API key
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.SessionId">
            <summary>
            The current session ID for the connected bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.Sequence">
            <summary>
            The current sequence number for the websocket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.Initialized">
            <summary>
            If the connection is initialized and not disconnected
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.HeartbeatAcknowledged">
            <summary>
            Discord Acknowledged our heartbeat successfully 
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.Settings">
            <summary>
            The settings for this bot of all the combined clients
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.Servers">
            <summary>
            All the servers that this bot is in
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.DirectMessagesByChannelId">
            <summary>
            All the direct messages that we have seen by channel Id
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.DirectMessagesByUserId">
            <summary>
            All the direct messages that we have seen by User ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.BotClient.Clients">
            <summary>
            List of all clients that are using this bot client
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.BotClient.Application">
            <summary>
            Application reference for this bot
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.BotClient.Rest">
            <summary>
            Rest handler for all discord API calls
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.#ctor(Oxide.Ext.Discord.DiscordSettings)">
            <summary>
            Creates a new bot client for the given settings
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.GetOrCreate(Oxide.Ext.Discord.DiscordClient)">
            <summary>
            Gets or creates a new bot client for the given discord client
            </summary>
            <param name="client">Client to use for creating / loading the bot client</param>
            <returns>Bot client that is created or already exists</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.ConnectWebSocket">
            <summary>
            Connects the websocket to discord. Should only be called if the websocket is disconnected
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.DisconnectWebsocket(System.Boolean,System.Boolean)">
            <summary>
            Close the websocket with discord
            </summary>
            <param name="attemptReconnect">Should we attempt to reconnect to discord after closing</param>
            <param name="attemptResume">Should we attempt to resume the previous session</param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.ShutdownBot">
            <summary>
            Called when bot client is no longer used by any client and can be shutdown.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.AddClient(Oxide.Ext.Discord.DiscordClient)">
            <summary>
            Add a client to this bot client
            </summary>
            <param name="client">Client to add to the bot</param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.RemoveClient(Oxide.Ext.Discord.DiscordClient)">
            <summary>
            Remove a client from the bot client
            If not clients are left bot will shutdown
            </summary>
            <param name="client">Client to remove from bot client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.CallHook(System.String,System.Object[])">
            <summary>
            Call a hook on all clients using this bot
            </summary>
            <param name="hookName">Hook to call</param>
            <param name="args">Args for the hook</param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.SetupHeartbeat(System.Single)">
            <summary>
            Setup a heartbeat for this bot with the given interval
            </summary>
            <param name="heartbeatInterval"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.DestroyHeartbeat">
            <summary>
            Destroy the heartbeat on this bot
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.SendHeartbeat">
            <summary>
            Sends a heartbeat to discord.
            If the previous heartbeat wasn't acknowledged then we will attempt to reconnect
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.Identify">
            <summary>
            Used to Identify the bot with discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.Resume">
            <summary>
            Used to resume the current session with discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.RequestGuildMembers(Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest)">
            <summary>
            Used to request guild members from discord for a specific guild
            </summary>
            <param name="request">Request for guild members</param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.UpdateVoiceState(Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate)">
            <summary>
            Used to update the voice state for the bot
            </summary>
            <param name="voiceState"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.UpdateStatus(Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate)">
            <summary>
            Used to update the bots status in discord
            </summary>
            <param name="statusUpdate"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.GetGuild(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns a guild for the specific ID
            </summary>
            <param name="id">ID of the guild</param>
            <returns>Guild with the specified ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.AddGuild(Oxide.Ext.Discord.Entities.Guilds.Guild)">
            <summary>
            Adds a guild to the list of servers a bot is in
            </summary>
            <param name="guild"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.AddGuildOrUpdate(Oxide.Ext.Discord.Entities.Guilds.Guild)">
            <summary>
            Adds a guild if it does not exist or updates the guild with
            </summary>
            <param name="guild"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.BotClient.RemoveGuild(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Removes guild from the list of servers a bot is in
            </summary>
            <param name="guildId">Guild to remove from bot</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordCommandsConfig">
            <summary>
            Represents discord extension command configuration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordCommandsConfig.CommandPrefixes">
            <summary>
            Array of command prefixes for discord commands
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Configuration.DiscordConfig">
            <summary>
            Represents Discord Extension Config
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Configuration.DiscordConfig.Commands">
            <summary>
            Discord Config commands options
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Configuration.DiscordConfig.#ctor(System.String)">
            <summary>
            Constructor for discord config
            </summary>
            <param name="filename">Filename to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Configuration.DiscordConfig.Load(System.String)">
            <summary>
            Load the config file and populate it.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.DiscordClient">
            <summary>
            Represents the object a plugin uses to connects to discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordClient.Owner">
            <summary>
            Which plugin is the owner of this client
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordClient.RegisteredForHooks">
            <summary>
            List of plugins that are registered to receive hook calls for this client
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordClient.Bot">
            <summary>
            The bot client that is unique to the Token used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordClient.Settings">
            <summary>
            Settings used to connect to discord and configure the extension
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.#ctor(Oxide.Core.Plugins.Plugin)">
            <summary>
            Constructor for a discord client
            </summary>
            <param name="plugin">Plugin that will own this discord client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.Connect(System.String,Oxide.Ext.Discord.Entities.Gatway.BotIntents)">
            <summary>
            Starts a connection to discord with the given apiKey and intents
            </summary>
            <param name="apiKey">API key for the connecting bot</param>
            <param name="intents">Intents the bot needs in order to function</param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.Connect(Oxide.Ext.Discord.DiscordSettings)">
            <summary>
            Starts a connection to discord with the given discord settings
            </summary>
            <param name="settings">Discord connection settings</param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.Disconnect">
            <summary>
            Disconnects this client from discord
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.RegisterPluginForHooks(Oxide.Core.Plugins.Plugin)">
            <summary>
            Registers a plugin to receive hook calls for this client
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.CallHook(System.String,System.Object[])">
            <summary>
            Call a hook for all plugins registered to receive hook calls for this client
            </summary>
            <param name="hookName"></param>
            <param name="args"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.GlobalCallHook(System.String,System.Object[])">
            <summary>
            Call a hook for all plugins registered to receive hook calls for this client
            </summary>
            <param name="hookName"></param>
            <param name="args"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.GetClient(Oxide.Core.Plugins.Plugin)">
            <summary>
            Gets the client for the given plugin
            </summary>
            <param name="plugin">Plugin to get client for</param>
            <returns>Discord client for the plugin</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordClient.GetClient(System.String)">
            <summary>
            Gets the client for the given plugin name
            </summary>
            <param name="pluginName">Plugin Name to get client for</param>
            <returns>Discord client for the plugin name</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.DiscordExtension">
            <summary>
            Discord Extension that is loaded by Oxide
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.TestVersion">
            <summary>
            Test version information if using test version
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.ExtensionVersion">
            <summary>
            Version number of the extension
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordExtension.GlobalLogger">
            <summary>
            Global logger for areas that aren't part of a client connection
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.#ctor(Oxide.Core.Extensions.ExtensionManager)">
            <summary>
            Constructor for the extension
            </summary>
            <param name="manager">Oxide extension manager</param>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Name">
            <summary>
            Name of the extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Author">
            <summary>
            Authors for the extension
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.Version">
            <summary>
            Version number used by oxide
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.DiscordExtension.GetExtensionVersion">
            <summary>
            Gets full extension version including test information
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.OnModLoad">
            <summary>
            Called when mod is loaded
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.DiscordExtension.OnShutdown">
            <summary>
            Called when server is shutdown
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.DiscordSettings">
            <summary>
            Represents settings used to connect to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordSettings.ApiToken">
            <summary>
            API token for the bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordSettings.LogLevel">
            <summary>
            Discord Extension Logging Level.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordSettings.Intents">
            <summary>
            Intents that your bot needs to work
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.DiscordSettings.CloseOnUnload">
            <summary>
            If the client should be shutdown on plugin unload.
            Recommend not changing this unless you know what you're doing
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.Activity">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object">Activity Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Name">
            <summary>
            The activity's name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Type">
            <summary>
            Activity type
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Url">
            <summary>
            Stream url, is validated when type is 1
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.CreatedAt">
            <summary>
            Unix timestamp of when the activity was added to the user's session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.CreatedAtDateTime">
            <summary>
            Timestamp of when the activity was added to the user's session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Timestamps">
            <summary>
            Unix timestamps for start and/or end of the game
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.ApplicationId">
            <summary>
            Application id for the game
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Details">
            <summary>
            What the player is currently doing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.State">
            <summary>
            The user's current party status
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Emoji">
            <summary>
            tTe emoji used for a custom status
            See <see cref="P:Oxide.Ext.Discord.Entities.Activities.Activity.Emoji"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Party">
            <summary>
            Information for the current party of the player
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityParty"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Assets">
            <summary>
            Images for the presence and their hover texts
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityAssets"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Secrets">
            <summary>
            Secrets for Rich Presence joining and spectating
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Instance">
            <summary>
            Whether or not the activity is an instanced game session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.Flags">
            <summary>
            Describes what the payload includes
            See <see cref="T:Oxide.Ext.Discord.Entities.Activities.ActivityFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.GetLargeImageUrl">
            <summary>
            Returns the large image url for the presence asset
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.Activity.GetSmallImageUrl">
            <summary>
            Returns the small image url for the presence asset
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityAssets">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-assets">Activity Assets</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.LargeImage">
            <summary>
            The id for a large asset of the activity, usually a snowflake
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.LargeText">
            <summary>
            Text displayed when hovering over the large image of the activity
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.SmallImage">
            <summary>
            The id for a small asset of the activity, usually a snowflake
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityAssets.SmallText">
            <summary>
            Text displayed when hovering over the small image of the activity
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags">Activity Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.None">
            <summary>
            No Actions can be done to this activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Instance">
            <summary>
            No Actions can be done to this activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Join">
            <summary>
            Activity can be joined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Spectate">
            <summary>
            Activity can be spectated
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.JoinRequest">
            <summary>
            User may request to join activity
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Sync">
            <summary>
            User can listen along in spotify
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityFlags.Play">
            <summary>
            User can play this song
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityParty">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-party">Activity Party</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.Id">
            <summary>
            The id of the party
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.Size">
            <summary>
            Used to show the party's current and maximum size
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.CurrentSize">
            <summary>
            The current party size
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityParty.MaxSize">
            <summary>
            The maximum party size
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-secrets">Activity Secrets</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Join">
            <summary>
            The secret for joining a party
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Spectate">
            <summary>
            The secret for spectating a game
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivitySecrets.Match">
            <summary>
            The secret for a specific instanced match
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-timestamps">Activity Timestamps</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.Start">
            <summary>
            Unix time (in milliseconds) of when the activity started
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.End">
            <summary>
            Unix time (in milliseconds) of when the activity ends
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.StartDateTime">
            <summary>
            DateTime when the activity starts
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Activities.ActivityTimestamps.EndDateTime">
            <summary>
            DateTime when the activity ends
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Activities.ActivityType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#activity-object-activity-types">Activity Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Game">
            Playing {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Streaming">
            Streaming {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Listening">
            Listening {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Watching">
            Watching {name}
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Custom">
            {emoji} {name} EX: ":smiley: I am cool"
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Activities.ActivityType.Competing">
            Competing in {name}
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.Webhooks">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.Users">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.AuditLogEntries">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.Integrations">
            <summary>
            
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.GetGuildAuditLog(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,System.Action{Oxide.Ext.Discord.Entities.AuditLogs.AuditLog})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.AuditLogs.AuditLog.GetGuildAuditLog(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.AuditLogs.AuditLog},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogChange.NewValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogChange.OldValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogChange.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.TargetId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.Changes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.ActionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.AuditLogEntry.Reason">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeBase.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeBase.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.Bitrate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.PermissionOverwrites">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.Nsfw">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.ApplicationId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeChannel.RateLimitPerUser">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.IconHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.SplashHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.OwnerId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.Region">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.AfkChannelId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.AfkTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.MfaLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.VerificationLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.ExplicitContentFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.DefaultMessageNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.VanityUrlCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.Add">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.PruneDeleteDays">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.WidgetEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.WidgetChannelId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeGuild.SystemChannelId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeIntegration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeIntegration.EnableEmoticons">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeIntegration.ExpireBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeIntegration.ExpireGracePeriod">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.ChannelId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.InviterId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.MaxUses">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.Uses">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.MaxAge">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeInvite.Temporary">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Hoist">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Mentionable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Allow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeRole.Deny">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeUser">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeUser.Deaf">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeUser.Mute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeUser.Nick">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.Change.AuditLogChangeUser.AvatarHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.DeleteMemberDays">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.MembersRemoved">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.ChannelId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.MessageId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.AuditLogs.OptionalAuditEntryInfo.RoleName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Channel">
            <summary>
            Represents a guild or DM <a href="https://discord.com/developers/docs/resources/channel#channel-object">Channel Structure</a> within Discord.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Id">
            <summary>
            The ID of this channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Type">
            <summary>
            the type of channel <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.GuildId">
            <summary>
            the ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Position">
            <summary>
            Sorting position of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.PermissionOverwrites">
            <summary>
            Explicit permission overwrites for members and roles <see cref="T:Oxide.Ext.Discord.Entities.Channels.Overwrite"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Name">
            <summary>
            The name of the channel (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Topic">
            <summary>
            The channel topic (0-1024 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Nsfw">
            <summary>
            Whether the channel is nsfw
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.LastMessageId">
            <summary>
            The id of the last message sent in this channel (may not point to an existing or valid message)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Bitrate">
            <summary>
            The bitrate (in bits) of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.UserLimit">
            <summary>
            The user limit of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600);
            bots, as well as users with the permission manage_messages or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Recipients">
            <summary>
            The recipients of the DM
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.Icon">
            <summary>
            icon hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.OwnerId">
            <summary>
            ID of the DM creator
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.ApplicationId">
            <summary>
            Application id of the group DM creator if it is bot-created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.ParentId">
            <summary>
            ID of the parent category for a channel (each parent category can contain up to 50 channels)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Channel.LastPinTimestamp">
            <summary>
            When the last pinned message was pinned.
            This may be null in events such as GUILD_CREATE when a message is not pinned.
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.CreateGuildChannel(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Channels.ChannelCreate,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new channel object for the guild.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel">Create Guild Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild to create the channel in</param>
            <param name="channel">Channel to create</param>
            <param name="callback">Callback with created channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetChannel(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Get a channel by ID
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel">Get Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">ID of the channel to get</param>
            <param name="callback">Callback with the channel object</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.ModifyChannel(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelUpdate,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Update a channel's settings.
            Requires the MANAGE_CHANNELS permission for the guild.
            See <a href="https://discord.com/developers/docs/resources/channel#modify-channel">Modify Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Update to be made to the channel. All fields are optional</param>
            <param name="callback">Callback with the updated channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.DeleteChannel(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a channel, or close a private message.
            Requires the MANAGE_CHANNELS permission for the guild.
            See <a href="https://discord.com/developers/docs/resources/channel#deleteclose-channel">Delete/Close Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the deleted channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetChannelMessages(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Message}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the messages for a channel.
            If operating on a guild channel, this endpoint requires the VIEW_CHANNEL permission to be present on the current user.
            If the current user is missing the 'READ_MESSAGE_HISTORY' permission in the channel then this will return no messages (since they cannot read the message history).
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-messages">Get Channel Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with list of channel messages</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetChannelMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a specific message in the channel.
            If operating on a guild channel, this endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-message">Get Channel Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID of the message</param>
            <param name="callback">Callback with the message for the ID</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.CreateMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to be created</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.CreateMessage(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Content of the message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.CreateMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.Embed,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embed">Embed to be send in the message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.BulkDeleteMessages(Oxide.Ext.Discord.DiscordClient,System.Collections.Generic.ICollection{System.String},System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete multiple messages in a single request.
            This endpoint can only be used on guild channels and requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#bulk-delete-messages">Bulk Delete Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageIds">Collect of message ids to delete (Between 2 - 100)</param>
            <param name="callback">Callback once the action is complete</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.EditChannelPermissions(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Overwrite,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit the channel permission overwrites for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#edit-channel-permissions">Edit Channel Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwrite">Overwrite to edit with changes</param>
            <param name="callback">Callback once the action is complete</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.EditChannelPermissions(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Channels.PermissionFlags,Oxide.Ext.Discord.Entities.Channels.PermissionFlags,Oxide.Ext.Discord.Entities.Channels.PermissionType,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit the channel permission overwrites for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#edit-channel-permissions">Edit Channel Permissions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwriteId">ID of the overwrite to edit</param>
            <param name="allow">Allow Permission Flags</param>
            <param name="deny">Deny Permission Flags</param>
            <param name="type">Permission Type Flag</param>
            <param name="callback">Callback once the action is complete</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetChannelInvites(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Invites.Invite}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of invite objects (with invite metadata) for the channel.
            Only usable for guild channels.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/channel#get-channel-invites">Get Channel Invites</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with list of invites for the channel</param>
            <exception cref="T:System.Exception">Thrown when the channel type is Dm or GroupDm</exception>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.CreateChannelInvite(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelInvite,System.Action{Oxide.Ext.Discord.Entities.Invites.Invite},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new invite object for the channel.
            Only usable for guild channels.
            Requires the CREATE_INSTANT_INVITE permission.
            See <a href="https://discord.com/developers/docs/resources/channel#create-channel-invite">Create Channel Invite</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="invite">Invite to create</param>
            <param name="callback">Callback with the created invite</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.DeleteChannelPermission(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Overwrite,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a channel permission overwrite for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-channel-permission">Delete Channel Permission</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwrite">Overwrite to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.DeleteChannelPermission(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a channel permission overwrite for a user or role in a channel.
            Only usable for guild channels.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-channel-permission">Delete Channel Permission</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="overwriteId">Overwrite ID to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.FollowNewsChannel(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Channels.FollowedChannel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Follow a News Channel to send messages to a target channel.
            Requires the MANAGE_WEBHOOKS permission in the target channel.
            See <a href="https://discord.com/developers/docs/resources/channel#follow-news-channel">Delete Channel Permission</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookChannelId">ID of target channel</param>
            <param name="callback">callback with the followed channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.TriggerTypingIndicator(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a typing indicator for the specified channel.
            Generally bots should not implement this route. However, if a bot is responding to a command and expects the computation to take a few seconds, this endpoint may be called to let the user know that the bot is processing their message.
            See <a href="https://discord.com/developers/docs/resources/channel#trigger-typing-indicator">Trigger Typing Indicator</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetPinnedMessages(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Messages.Message}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns all pinned messages in the channel
            See <a href="https://discord.com/developers/docs/resources/channel#get-pinned-messages">Get Pinned Messages</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback of all the pinned messages</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GroupDmAddRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to add</param>
            <param name="accessToken">Users access token</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GroupDmAddRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User to add</param>
            <param name="accessToken">Users access token</param>
            <param name="nick">User nickname</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GroupDmRemoveRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Removes a recipient from a Group DM
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to remove</param>
            <param name="callback">callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Channel.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel-json-params">Guild Channel Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Name">
            <summary>
            The name of the channel (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Type">
            <summary>
            the type of channel <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Topic">
            <summary>
            The channel topic (0-1024 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Bitrate">
            <summary>
            The bitrate (in bits) of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.UserLimit">
            <summary>
            The user limit of the voice channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.RateLimitPerUser">
            <summary>
            Amount of seconds a user has to wait before sending another message (0-21600);
            bots, as well as users with the permission manage_messages or manage_channel, are unaffected
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Position">
            <summary>
            Sorting position of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.PermissionOverwrites">
            <summary>
            Explicit permission overwrites for members and roles <see cref="T:Oxide.Ext.Discord.Entities.Channels.Overwrite"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.ParentId">
            <summary>
            ID of the parent category for a channel (each parent category can contain up to 50 channels)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelCreate.Nsfw">
            <summary>
            Whether the channel is nsfw
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelInvite">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#create-channel-invite-json-params">Channel Invite Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.MaxAge">
            <summary>
            Duration of invite in seconds before expiry, or 0 for never
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.MaxUses">
            <summary>
            Max number of uses or 0 for unlimited
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.Temporary">
            <summary>
            Whether this invite only grants temporary membership
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.Unique">
            <summary>
            If true, don't try to reuse a similar invite (useful for creating many unique one time use invites)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.TargetUser">
            <summary>
            The target user id for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelInvite.TargetUserType">
            <summary>
            The type of target user for this invite
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelMention">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-mention-object-channel-mention-structure">Channel Mention Structure</a> in a message 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Id">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.GuildId">
            <summary>
            ID of the guild containing the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Type">
            <summary>
            The type of channel
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.ChannelMention.Name">
            <summary>
            The name of the channel
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.ChannelMention.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#channel-object-channel-types">Types of Channels</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildText">
            <summary>
            A text channel within a server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.Dm">
            <summary>
            A direct message between users
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildVoice">
            <summary>
            A voice channel within a server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GroupDm">
            <summary>
            A direct message between multiple users
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildCategory">
            <summary>
            An organizational category that contains up to 50 channels
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildNews">
            <summary>
            A channel that users can follow and crosspost into their own server
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.ChannelType.GuildStore">
            <summary>
            A channel in which game developers can sell their game on Discord
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.ChannelUpdate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#modify-channel-json-params">Channel Update Structure</a>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.FollowedChannel">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#followed-channel-object-followed-channel-structure">Followed Channel Structure</a> from an API response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.FollowedChannel.ChannelId">
            <summary>
            Source channel ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.FollowedChannel.WebhookId">
            <summary>
            Created target webhook ID
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.Overwrite">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure">Overwrite Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Id">
            <summary>
            Role or user ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Allow">
            <summary>
            Permissions allowed <see cref="T:Oxide.Ext.Discord.Entities.Channels.PermissionFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Deny">
            <summary>
            Permissions denied <see cref="T:Oxide.Ext.Discord.Entities.Channels.PermissionFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Channels.Overwrite.Type">
            <summary>
            Permission Type <see cref="T:Oxide.Ext.Discord.Entities.Channels.PermissionType"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Channels.Overwrite.GetEntityId">
            <summary>
            Returns the entity ID for the entity
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.PermissionFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags">Permission Flags</a> for user or role
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.CreateInstantInvite">
            <summary>
            Allows creation of instant invites
            Channel Type (Text, Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.KickMembers">
            <summary>
            Allows kicking members
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.BanMembers">
            <summary>
            Allows banning members
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.Administrator">
            <summary>
            Allows all permissions and bypasses channel permission overwrites
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageChannels">
            <summary>
            Allows management and editing of channels
            Channel Type (Text, Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageGuild">
            <summary>
            Allows management and editing of the guild
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.AddReactions">
            <summary>
            Allows for the addition of reactions to messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ViewAuditLog">
            <summary>
            Allows for viewing of audit logs
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.PrioritySpeaker">
            <summary>
            Allows for using priority speaker in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.Stream">
            <summary>
            Allows the user to go live
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ViewChannel">
            <summary>
            Allows guild members to view a channel, which includes reading messages in text channels
            Channel Type (Text, Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.SendMessages">
            <summary>
            Allows for sending messages in a channel
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.SendTTSMessages">
            <summary>
            Allows for sending of /tts messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageMessages">
            <summary>
            Allows for deletion of other users messages
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.EmbedLinks">
            <summary>
            Links sent by users with this permission will be auto-embedded
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.AttachFiles">
            <summary>
            Allows for uploading images and files
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ReadMessageHistory">
            <summary>
            Allows for reading of message history
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.MentionEveryone">
            <summary>
            Allows for using the @everyone tag to notify all users in a channel,
            and the @here tag to notify all online users in a channel
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.UseExternalEmojis">
            <summary>
            Allows the usage of custom emojis from other servers
            Channel Type (Text)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ViewGuildInsights">
            <summary>
            Allows for viewing guild insights
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.Connect">
            <summary>
            Allows for joining of a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.Speak">
            <summary>
            Allows for speaking in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.MuteMembers">
            <summary>
            Allows for muting members in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.DeafanMembers">
            <summary>
            Allows for deafening of members in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.MoveMembers">
            <summary>
            Allows for moving of members between voice channels
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.UseVad">
            <summary>
            Allows for using voice-activity-detection in a voice channel
            Channel Type (Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ChangeNickname">
            <summary>
            Allows for modification of own nickname
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageNicknames">
            <summary>
            Allows for modification of other users nicknames
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageRoles">
            <summary>
            Allows management and editing of roles
            Channel Type (Text, Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageWebhooks">
            <summary>
            Allows management and editing of webhooks
            Channel Type (Text, Voice)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionFlags.ManageEmojis">
            <summary>
            Allows management and editing of emojis
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Channels.PermissionType">
            <summary>
            Represents the type of a permission
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionType.Role">
            <summary>
            This permission belongs to a role
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Channels.PermissionType.Member">
            <summary>
            This permission belongs to a member
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.Emoji">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#emoji-object">Emoji Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.Id">
            <summary>
            Emoji id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.User">
            <summary>
            User that created this emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.RequireColons">
            <summary>
            Whether this emoji must be wrapped in colons
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.Managed">
            <summary>
            Whether this emoji is managed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.Animated">
            <summary>
            Whether this emoji is animated
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.Available">
            <summary>
            Whether this emoji can be used, may be false due to loss of Server Boosts
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.Emoji.Url">
            <summary>
            Url to the emoji image
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Emojis.Emoji.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#create-guild-emoji-json-params">Emoji Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiCreate.ImageData">
            <summary>
            The 128x128 emoji image
            Emojis and animated emojis have a maximum file size of 256kb.
            Attempting to upload an emoji larger than this limit will fail and return 400 Bad Request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/emoji#modify-guild-emoji-json-params">Emoji Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate.Name">
            <summary>
            Emoji name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate.Roles">
            <summary>
            Roles this emoji is whitelisted to
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Application">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/oauth2#application-object">Application Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Id">
            <summary>
            The id of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Name">
            <summary>
            The name of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Icon">
            <summary>
            The icon hash of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Description">
            <summary>
            The description of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.RpcOrigins">
            <summary>
            An array of rpc origin urls, if rpc is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.BotPublic">
            <summary>
            When false only app owner can join the app's bot to guilds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.BotRequireCodeGrant">
            <summary>
            When true the app's bot will only join upon completion of the full oauth2 code grant flow
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Owner">
            <summary>
            Partial user object containing info on the owner of the application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Summary">
            <summary>
            If this application is a game sold on Discord, this field will be the summary field for the store page of its primary sku
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Verify">
            <summary>
            The base64 encoded key for the GameSDK's GetTicket
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Team">
            <summary>
            If the application belongs to a team, this will be a list of the members of that team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.GuildId">
            <summary>
            If this application is a game sold on Discord, this field will be the guild to which it has been linked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.PrimarySkuId">
            <summary>
            If this application is a game sold on Discord, this field will be the id of the "Game SKU" that is created, if exists
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Slug">
            <summary>
            If this application is a game sold on Discord, this field will be the URL slug that links to the store page
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.CoverImage">
            <summary>
            If this application is a game sold on Discord, this field will be the hash of the image on store embeds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.Flags">
            <summary>
            The application's public flags
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Application.GetApplicationIconUrl">
            <summary>
            Returns the URL for the applications Icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.GetGlobalApplicationCommands(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Fetch all of the global commands for your application.
            Returns a list of ApplicationCommand.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#get-global-application-commands">Get Global Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with list of application commands</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.CreateGlobalApplicationCommand(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new global command.
            New global commands will be available in all guilds after 1 hour.
            Note: Creating a command with the same name as an existing command for your application will overwrite the old command.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#create-global-application-command">Create Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Command to create</param>
            <param name="callback">Callback with the created command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditGlobalApplicationCommand(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit a global command.
            Updates will be available in all guilds after 1 hour.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-global-application-command">Edit Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="update">Command Update</param>
            <param name="callback">Callback with updated command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteGlobalApplicationCommand(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes a global command
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-global-application-command">Delete Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="commandId">Command to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.GetGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Fetch all of the guild commands for your application for a specific guild.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#get-guild-application-commands">Get Guild Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">ID of the guild to get commands for</param>
            <param name="callback">Callback with a list of guild application commands</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.GetGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Fetch all of the guild commands for your application for a specific guild.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#get-guild-application-commands">Get Guild Application Commands</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guild">Guild to get commands for</param>
            <param name="callback">Callback with a list of guild application commands</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.CreateGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new guild command.
            New guild commands will be available in the guild immediately.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#create-guild-application-command">Create Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to create the command in</param>
            <param name="create">Command to create</param>
            <param name="callback">Callback with the created command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.CreateGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new guild command.
            New guild commands will be available in the guild immediately.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#create-guild-application-command">Create Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guild">Guild to create the command in</param>
            <param name="create">Command to create</param>
            <param name="callback">Callback with the created command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit a guild command.
            Updates for guild commands will be available immediately.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-guild-application-command">Edit Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to update the command in</param>
            <param name="update">Command update</param>
            <param name="callback">Callback with updated command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit a guild command.
            Updates for guild commands will be available immediately.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-guild-application-command">Edit Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guild">Guild to update the command in</param>
            <param name="update">Command update</param>
            <param name="callback">Callback with updated command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a guild command.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-guild-application-command">Delete Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to delete command from</param>
            <param name="commandId">Command ID to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteGuildApplicationCommands(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a guild command.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-guild-application-command">Delete Guild Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guild">Guild to delete command from</param>
            <param name="delete">Command to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditOriginalInteractionResponse(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edits the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-original-interaction-response">Edit Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interactionToken">Interaction token to edit</param>
            <param name="message">Updated message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditOriginalInteractionResponse(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Interaction,Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edits the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-original-interaction-response">Edit Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interaction">Interaction to edit</param>
            <param name="message">Updated message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteOriginalInteractionResponse(Oxide.Ext.Discord.DiscordClient,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-original-interaction-response">Delete Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interactionToken">Interaction token to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteOriginalInteractionResponse(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Interaction,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes the initial Interaction response
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-original-interaction-response">Delete Original Interaction Response</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interaction">Interaction to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.CreateFollowUpMessage(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#create-followup-message">Create Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interactionToken">Interaction token to follow up</param>
            <param name="message">Message to follow up with</param>
            <param name="callback">Callback with the message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.CreateFollowUpMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.Interaction,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#create-followup-message">Create Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interaction">Interaction to follow up</param>
            <param name="message">Message to follow up with</param>
            <param name="callback">Callback with the message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.EditFollowUpMessage(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edits a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-followup-message">Edit Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interactionToken">Interaction token of the follow up message</param>
            <param name="messageId">Message ID of the follow up message</param>
            <param name="edit">Updated message</param>
            <param name="callback">Callback with the updated message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Application.DeleteFollowUpMessage(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes a followup message for an Interaction
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-followup-message">Delete Followup Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="interactionToken">Interaction token of the message to delete</param>
            <param name="messageId">Message ID to delete</param>
            <param name="callback">Callback with the updated message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommand">ApplicationCommand</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand.Id">
            <summary>
            Unique id of the command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand.ApplicationId">
            <summary>
            Unique id of the parent application
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand.EditGlobalApplicationCommand(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit a global command.
            Updates will be available in all guilds after 1 hour.
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#edit-global-application-command">Edit Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with updated command</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommand.DeleteGlobalApplicationCommand(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes a global command
            See <a href="https://discord.com/developers/docs/interactions/slash-commands#delete-global-application-command">Delete Global Application Command</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCallbackData">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionapplicationcommandcallbackdata">Interaction Application Command Callback Data Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCallbackData.Tts">
            <summary>
            Is the response TTS
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCallbackData.Content">
            <summary>
            Message content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCallbackData.Embeds">
            <summary>
            List of embeds
            Supports up to 10 embeds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCallbackData.AllowedMentions">
            <summary>
            Allowed mentions 
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#create-global-application-command-json-params">Application Command Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate.Name">
            <summary>
            Command name (3-32 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate.Description">
            <summary>
            Description of the command (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandCreate.Options">
            <summary>
            The parameters for the command
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionData">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-applicationcommandinteractiondata">ApplicationCommandInteractionData</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionData.Id">
            <summary>
            ID of the invoked command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionData.Name">
            <summary>
            The name of the invoked command
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionData.Options">
            <summary>
            The params + values from the user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionDataOption">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-applicationcommandinteractiondataoption">Application Command Interaction Data Option</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionDataOption.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionDataOption.Value">
            <summary>
            The value of the pair
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionDataOption.Options">
            <summary>
            Present if this option is a group or subcommand
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionDataOption"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoption">ApplicationCommandOption</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Type">
            <summary>
            They type of command option
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Name">
            <summary>
            Name of the command option (1-32 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Description">
            <summary>
            Description the command option (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Required">
            <summary>
            If the parameter is required or optional
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Choices">
            <summary>
            Choices for string and int types for the user to pick from
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption.Options">
            <summary>
            If the option is a subcommand or subcommand group type, this nested options will be the parameters
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOption"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionChoice">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptionchoice">ApplicationCommandOptionChoice</a>
            If you specify choices for an option, they are the only valid values for a user to pick
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionChoice.Name">
            <summary>
            Choice name (1-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionChoice.Value">
            <summary>
            Value of the choice
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptiontype">ApplicationCommandOptionType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.SubCommand">
            <summary>
            The command option is a sub command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.SubCommandGroup">
            <summary>
            The command option is a sub command group
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.String">
            <summary>
            The sub command option is a string
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.Integer">
            <summary>
            The sub command options is an integer
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.Boolean">
            <summary>
            The sub command option is a boolean
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.User">
            <summary>
            The sub command option is a user
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.Channel">
            <summary>
            The sub command option is a channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandOptionType.Role">
            <summary>
            The sub command option is a Role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.Interaction">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction">Interaction Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Id">
            <summary>
            Id of the interaction
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Type">
            <summary>
            The type of interaction
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.InteractionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Data">
            <summary>
            The command data payload
            See <see cref="T:Oxide.Ext.Discord.Entities.Interactions.ApplicationCommands.ApplicationCommandInteractionData"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.GuildId">
            <summary>
            The guild it was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.ChannelId">
            <summary>
            The channel it was sent from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Member">
            <summary>
            Guild member data for the invoking user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Token">
            <summary>
            A continuation token for responding to the interaction
            Interaction tokens are valid for 15 minutes and can be used to send followup messages but you must send an initial response within 3 seconds of receiving the event.
            If the 3 second deadline is exceeded, the token will be invalidated.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.Interaction.Version">
            <summary>
            Read-only property, always 1
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Interactions.Interaction.CreateResponse(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Interactions.InteractionResponse,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a response to an Interaction from the gateway.
            </summary>
            <param name="client">Client to use</param>
            <param name="response">Response to respond with</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionResponse">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-response">Interaction Response</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionResponse.Type">
            <summary>
            The type of response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Interactions.InteractionResponse.Data">
            <summary>
            An optional response message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionresponsetype">InteractionResponseType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.Pong">
            <summary>
            Acknowledges a Ping
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.Acknowledge">
            <summary>
            Acknowledge a command without sending a message, eating the user's input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.ChannelMessage">
            <summary>
            Respond with a message, eating the user's input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.ChannelMessageWithSource">
            <summary>
            Respond with a message, showing the user's input
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionResponseType.AcknowledgeWithSource">
            <summary>
            Acknowledge a command without sending a message, showing the user's input
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Interactions.InteractionType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/interactions/slash-commands#interaction-interactiontype">InteractionType</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.Ping">
            <summary>
            The interaction is a ping
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Interactions.InteractionType.ApplicationCommand">
            <summary>
            The interaction is a user using a command
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.CommandPayload">
            <summary>
            Represents a command payload
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.CommandPayload.OpCode">
            <summary>
            Command Code for the payload
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.CommandPayload.Payload">
            <summary>
            Payload datal
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.ClientStatus">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#client-status-object">Client Status Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.ClientStatus.Desktop">
            <summary>
            The user's status set for an active desktop (Windows, Linux, Mac) application session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.ClientStatus.Mobile">
            <summary>
            The user's status set for an active mobile (iOS, Android) application session
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.ClientStatus.Web">
            <summary>
            The user's status set for an active web (browser, bot account) application session
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes">Gateway Opcodes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.Heartbeat">
            <summary>
            Maintains an active gateway connection
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.Identify">
            <summary>
            Starts a new session during the initial handshake.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.StatusUpdate">
            <summary>
            Update the client's status.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.VoiceStateUpdate">
            <summary>
            Used to join/leave or move between voice channels.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.Resume">
            <summary>
            Resume a previous session that was disconnected.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode.RequestGuildMembers">
            <summary>
            Request information about offline guild members in a large guild.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#request-guild-members">Request Guild Members</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.GuildId">
            <summary>
            ID of the guild to get members for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.Query">
            <summary>
            String that username starts with, or an empty string to return all members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.Limit">
            <summary>
            Maximum number of members to send matching the query;
            a limit of 0 can be used with an empty string query to return all members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.Presences">
            <summary>
            Used to specify if we want the presences of the matched members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.UserIds">
            <summary>
            Used to specify which users you wish to fetch
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.GuildMembersRequest.Nonce">
            <summary>
            Nonce to identify the Guild Members Chunk response
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#identify">Identify</a> Command
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.Token">
            <summary>
            Authentication token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.Properties">
            <summary>
            Connection properties
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.Compress">
            <summary>
            Whether this connection supports compression of packets
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.LargeThreshold">
            <summary>
            Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.Shard">
            <summary>
            Used for Guild Sharding
            See <a href="https://discord.com/developers/docs/topics/gateway#sharding">Guild Sharding</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.StatusUpdate">
            <summary>
            Presence structure for initial presence information
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.GuildSubscriptions">
            <summary>
            Enables dispatching of guild subscription events (presence and typing events)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.Identify.Intents">
            <summary>
            The Gateway Intents you wish to receive
            See <a href="https://discord.com/developers/docs/topics/gateway#gateway-intents">Gateway Intents</a>
            See <see cref="T:Oxide.Ext.Discord.Entities.Gatway.BotIntents"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.Properties">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties">Identify Connection Properties</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Properties.OS">
            <summary>
            Your operating system
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Properties.Browser">
            <summary>
            Your library name
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Properties.Device">
            <summary>
            Your library name
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.Resume">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#resume">Resume</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Resume.Token">
            <summary>
            Session token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Resume.SessionId">
            <summary>
            Session ID
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Commands.Resume.Sequence">
            <summary>
            Last sequence number received
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#update-status">Update Status</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate.Status">
            <summary>
            The user's new status
            <see cref="T:Oxide.Ext.Discord.Entities.Users.StatusType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate.Activities">
            <summary>
            Null, or the user's activities
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate.Since">
            <summary>
            Unix time (in milliseconds) of when the client went idle, or null if the client is not idle
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.StatusUpdate.Afk">
            <summary>
            Whether or not the client is afk
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#update-voice-state">Update Voice State</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate.ChannelId">
            <summary>
            ID of the voice channel client wants to join (null if disconnecting)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate.SelfMute">
            <summary>
            Is the client muted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Commands.VoiceStateUpdate.SelfDeaf">
            <summary>
            Is the client deafened
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Connect">
            <summary>
            Represents the websocket connection data
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Connect.Version">
            <summary>
            Which websocket version to use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Connect.Encoding">
            <summary>
            How the data sent / received will be encoded
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Connect.Compress">
            <summary>
            Compression the websocket should use
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gatway.Connect.Serialize">
            <summary>
            Generated connection string for the websocket
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.EventPayload">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#payloads">Gateway Payload Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.OpCode">
            <summary>
            Op Code for the payload
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.EventName">
            <summary>
            The event name for this payload
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.Data">
            <summary>
            Event data
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.Sequence">
            <summary>
            Sequence number, used for resuming sessions and heartbeats
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.EventData">
            <summary>
            Data as JObject
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.EventPayload.TokenData">
            <summary>
            Data as JToken
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.ApplicationCommandEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#application-command-extra-fields">Application Command Gateway Event</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.ApplicationCommandEvent.GuildId">
            <summary>
            ID of the guild the command is in
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.ChannelPinsUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#channel-pins-update">Channel Pins Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.ChannelPinsUpdate.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.ChannelPinsUpdate.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.ChannelPinsUpdate.LastPinTimestamp">
            <summary>
            The time at which the most recent pinned message was pinned
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes">Gateway Opcodes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.Dispatch">
            <summary>
            An event was dispatched.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.Heartbeat">
            <summary>
            Fired periodically by the client to keep the connection alive.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.Reconnect">
            <summary>
            You should attempt to reconnect and resume immediately.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.InvalidSession">
            <summary>
            The session has been invalidated. You should reconnect and identify/resume accordingly.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.Hello">
            <summary>
            Sent immediately after connecting, contains the heartbeat_interval to use.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.Events.GatewayEventCode.HeartbeatAcknowledge">
            <summary>
            Sent in response to receiving a heartbeat to acknowledge that it has been received.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildBanEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-add">Guild Ban Add</a> Event
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-ban-remove">Guild Ban Remove</a> Event
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildBanEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildBanEvent.User">
            <summary>
            The banned / unbanned user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildEmojisUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-emojis-update">Guild Emojis Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildEmojisUpdate.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildEmojisUpdate.Emojis">
            <summary>
            List of emojis
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildIntergrationsUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-integrations-update">Guild Integrations Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildIntergrationsUpdate.GuildId">
            <summary>
            ID of the guild whose integrations were updated
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberAddEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-add">Guild Member Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberAddEvent.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberRemove">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-remove">Guild Member Remove</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberRemove.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberRemove.User">
            <summary>
            The user who was removed
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-members-chunk">Guild Members Chunk</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.Members">
            <summary>
            Set of guild members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.ChunkIndex">
            <summary>
            The chunk index in the expected chunks for this response (0 &lt;= chunk_index &lt; chunk_count)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.ChunkCount">
            <summary>
            The total number of expected chunks for this response
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.NotFound">
            <summary>
            If passing an invalid id to REQUEST_GUILD_MEMBERS, it will be returned here
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.Presences">
            <summary>
            II passing true to REQUEST_GUILD_MEMBERS, presences of the returned members will be here
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMembersChunk.Nonce">
            <summary>
            The nonce used in the Guild Members Request
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-member-update">Guild Member Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.Roles">
            <summary>
            User role ids
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.Nick">
            <summary>
            Nickname of the user in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.JoinedAt">
            <summary>
            When the user joined the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.PremiumSince">
            <summary>
            When the user starting boosting the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildMemberUpdateEvent.Pending">
            <summary>
            Whether the user has not yet passed the guild's Membership Screening requirements
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-create">Guild Role Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleCreate.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleCreate.Role">
            <summary>
            The role created
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleDelete">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-delete">Guild Role Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleDelete.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleDelete.RoleId">
            <summary>
            ID of the role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#guild-role-update">Guild Role Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleUpdate.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.GuildRoleUpdate.Role">
            <summary>
            The role updated
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.Hello">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#hello">Hello</a>
            Sent on connection to the websocket. Defines the heartbeat interval that the client should heartbeat to.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Hello.HeartbeatInterval">
            <summary>
            The interval (in milliseconds) the client should heartbeat with
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#invite-create">Invite Create</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.ChannelId">
            <summary>
            The channel the invite is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.Code">
            <summary>
            The unique invite code
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.CreatedAt">
            <summary>
            The time at which the invite was created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.GuildId">
            <summary>
            The guild of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.Inviter">
            <summary>
            The user that created the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.MaxAge">
            <summary>
            How long the invite is valid for (in seconds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.MaxUses">
            <summary>
            The maximum number of times the invite can be use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.TargetUser">
            <summary>
            The target user for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.TargetUserType">
            <summary>
            The type of user target for this invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.Temporary">
            <summary>
            Whether or not the invite is temporary (invited users will be kicked on disconnect unless they're assigned a role)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteCreated.Uses">
            <summary>
            How many times the invite has been used (always will be 0)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.InviteDeleted">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#invite-delete">Invite Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteDeleted.ChannelId">
            <summary>
            The channel of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteDeleted.GuildId">
            <summary>
            The guild of the invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.InviteDeleted.Code">
            <summary>
            The unique invite code
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDelete">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-delete">Message Delete</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDelete.Id">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDelete.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDelete.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDeleteBulk">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-delete-bulk">Message Delete Bulk</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDeleteBulk.Ids">
            <summary>
            The ids of the messages
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDeleteBulk.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageDeleteBulk.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-add">Message Reaction Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.Member">
            <summary>
            The member who reacted if this happened in a guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionAdd.Emoji">
            <summary>
            The emoji used to react
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove">Message Reaction Remove</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemove.Emoji">
            <summary>
            The emoji removed
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemoveAll">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#message-reaction-remove-all">Message Reaction Remove All</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemoveAll.ChannelId">
            <summary>
            The id of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemoveAll.MessageId">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.MessageReactionRemoveAll.GuildId">
            <summary>
            The id of the guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#presence-update">Presence Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate.User">
            <summary>
            The user presence is being updated for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate.Status">
            <summary>
            Users status
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate.Activities">
            <summary>
            User's current activities
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.PresenceUpdate.ClientStatus">
            <summary>
            User's platform-dependent status
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.Ready">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#ready">Ready</a>
            The ready event is dispatched when a client has completed the initial handshake with the gateway (for new sessions)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.Version">
            <summary>
            Gateway version
            See <a href="https://discord.com/developers/docs/topics/gateway#gateways-gateway-versions">Gateway Version</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.User">
            <summary>
            Information about the user including email
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.Guilds">
            <summary>
            The guilds the user is in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.SessionId">
            <summary>
            Used for resuming connections
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.Shard">
            <summary>
            The shard information associated with this session, if sent when identifying
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.Application">
            <summary>
            Contains id and flags
            See <see cref="P:Oxide.Ext.Discord.Entities.Gatway.Events.Ready.Application"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.Resumed">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#resumed">Resumed</a>
            The resumed event is dispatched when a client has sent a resume payload to the gateway (for resuming existing sessions).
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#typing-start">Typing Start</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart.ChannelId">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart.UserId">
            <summary>
            ID of the user
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart.Timestamp">
            <summary>
            Unix time (in seconds) of when the user started typing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.TypingStart.Member">
            <summary>
            The member who started typing if this happened in a guild
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.VoiceServerUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#voice-server-update">Voice Server Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.VoiceServerUpdate.Token">
            <summary>
            Voice connection token
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.VoiceServerUpdate.GuildId">
            <summary>
            The guild this voice server update is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.VoiceServerUpdate.Endpoint">
            <summary>
            The voice server host
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Events.WebhooksUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#webhooks-update">Webhooks Update</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.WebhooksUpdate.GuildId">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Events.WebhooksUpdate.ChannelId">
            <summary>
            ID of the channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.Gateway">
            <summary>
            Represents Discord Gatway Connection Url
            See <a href="https://discord.com/developers/docs/topics/gateway#get-gateway">Get Gateway</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Gateway.Url">
            <summary>
            Gatway URL to use
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Gatway.Gateway.WebsocketUrl">
            <summary>
            Saved Gateway URL
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Gatway.Gateway.GetGateway(Oxide.Ext.Discord.BotClient,System.Action{Oxide.Ext.Discord.Entities.Gatway.Gateway})">
            <summary>
            Returns an object with a single valid WSS URL, which the client can use for Connecting.
            Clients should cache this value and only call this endpoint to retrieve a new URL if they are unable to properly establish a connection using the cached version of the URL.
            See <a href="https://discord.com/developers/docs/topics/gateway#get-gateway">Get Gateway</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the Gateway response</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Gatway.BotIntents">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/gateway#gateway-intents">Gateway Intents</a>
            These are used to indicate which events your bot / application wants to listen to / have access to
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.None">
            <summary>
            Represents No Intents
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.Guilds">
            <summary>
            - GUILD_CREATE
            - GUILD_UPDATE
            - GUILD_DELETE
            - GUILD_ROLE_CREATE
            - GUILD_ROLE_UPDATE
            - GUILD_ROLE_DELETE
            - CHANNEL_CREATE
            - CHANNEL_UPDATE
            - CHANNEL_DELETE
            - CHANNEL_PINS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildMembers">
            <summary>
            - GUILD_MEMBER_ADD
            - GUILD_MEMBER_UPDATE
            - GUILD_MEMBER_REMOVE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildBans">
            <summary>
            - GUILD_BAN_ADD
            - GUILD_BAN_REMOVE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildEmojis">
            <summary>
            - GUILD_EMOJIS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildIntegrations">
            <summary>
            - GUILD_INTEGRATIONS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildWebhooks">
            <summary>
            - WEBHOOKS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildInvites">
            <summary>
            - INVITE_CREATE
            - INVITE_DELETE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildVoiceStates">
            <summary>
            - VOICE_STATE_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildPresences">
            <summary>
            - PRESENCE_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildMessages">
            <summary>
            - MESSAGE_CREATE
            - MESSAGE_UPDATE
            - MESSAGE_DELETE
            - MESSAGE_DELETE_BULK
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildMessageReactions">
            <summary>
            - MESSAGE_REACTION_ADD
            - MESSAGE_REACTION_REMOVE
            - MESSAGE_REACTION_REMOVE_ALL
            - MESSAGE_REACTION_REMOVE_EMOJI
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.GuildMessageTyping">
            <summary>
            - TYPING_START
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.DirectMessages">
            <summary>
            - MESSAGE_CREATE
            - MESSAGE_UPDATE
            - MESSAGE_DELETE
            - CHANNEL_PINS_UPDATE
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.DirectMessageReactions">
            <summary>
              - MESSAGE_REACTION_ADD
            - MESSAGE_REACTION_REMOVE
            - MESSAGE_REACTION_REMOVE_ALL
            - MESSAGE_REACTION_REMOVE_EMOJI
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.DirectMessageTyping">
            <summary>
            - TYPING_START
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Gatway.BotIntents.All">
            <summary>
            Represents all Intents
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.DefaultMessageNotificationLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level">Default Message Notification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.DefaultMessageNotificationLevel.AllMessages">
            <summary>
            Notify for all guild messages
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.DefaultMessageNotificationLevel.OnlyMentions">
            <summary>
            Notify for only mentions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level">Explicit Content Filter Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.Disabled">
            <summary>
            Disable explicit content filter
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.MembersWithoutRoles">
            <summary>
            Filter for only members without roles
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.ExplicitContentFilterLevel.AllMembers">
            <summary>
            Filter for all members
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.Guild">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object">Guild Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Id">
            <summary>
            Guild id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.IconHash">
            <summary>
            Icon hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Splash">
            <summary>
            Splash hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.DiscoverySplash">
            <summary>
            Discovery splash hash
            Only present for guilds with the "DISCOVERABLE" feature
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Owner">
            <summary>
            True if the user is the owner of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.OwnerId">
            <summary>
            ID of owner
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Permissions">
            <summary>
            Total permissions for the user in the guild (excludes overrides)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Region">
            <summary>
            Voice region id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.AfkChannelId">
            <summary>
            ID of afk channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.AfkTimeout">
            <summary>
            Afk timeout in seconds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.WidgetEnabled">
            <summary>
            True if the server widget is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.WidgetChannelId">
            <summary>
            The channel id that the widget will generate an invite to, or null if set to no invite
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.VerificationLevel">
            <summary>
            Verification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.DefaultMessageNotifications">
            <summary>
            Default message notification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.ExplicitContentFilter">
            <summary>
            Explicit content filter level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Roles">
            <summary>
            Roles in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Emojis">
            <summary>
            Custom guild emojis
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Features">
            <summary>
            Enabled guild features
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.MfaLevel">
            <summary>
            Required MFA level for the guild
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMFALevel"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.ApplicationId">
            <summary>
            Application id of the guild creator if it is bot-created
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.SystemChannelId">
            <summary>
            The id of the channel where guild notices such as welcome messages and boost events are posted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.SystemChannelFlags">
            <summary>
            System channel flags
            See <see cref="P:Oxide.Ext.Discord.Entities.Guilds.Guild.SystemChannelFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.RulesChannelId">
            <summary>
            The id of the channel where Community guilds can display rules and/or guidelines
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.JoinedAt">
            <summary>
            When this guild was joined at
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Large">
            <summary>
            True if this is considered a large guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Unavailable">
            <summary>
            True if this guild is unavailable due to an outage
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.MemberCount">
            <summary>
            Total number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.VoiceStates">
            <summary>
            States of members currently in voice channels; lacks the guild_id key
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Members">
            <summary>
            Users in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Channels">
            <summary>
            Channels in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Presences">
            <summary>
            Presences of the members in the guild
            will only include non-offline members if the size is greater than large threshold
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.MaxPresences">
            <summary>
            The maximum number of presences for the guild (the default value, currently 25000, is in effect when null is returned)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.MaxMembers">
            <summary>
            The maximum number of members for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.VanityUrlCode">
            <summary>
            The vanity url code for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Description">
            <summary>
            The description for the guild, if the guild is discoverable
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.Banner">
            <summary>
            Banner hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.PremiumTier">
            <summary>
            Premium tier (Server Boost level)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.PremiumSubscriptionCount">
            <summary>
            The number of boosts this guild currently has
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.PreferredLocale">
            <summary>
            The preferred locale of a Community guild
            Used in server discovery and notices from Discord
            Defaults to "en-US"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.PublicUpdatesChannelId">
            <summary>
            The maximum amount of users in a video channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.MaxVideoChannelUsers">
            <summary>
            The maximum amount of users in a video channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.ApproximateMemberCount">
            <summary>
            Approximate number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.ApproximatePresenceCount">
            <summary>
            Approximate number of non-offline members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.IconUrl">
            <summary>
            Returns the guild Icon Url
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.SplashUrl">
            <summary>
            Returns the Guilds Splash Url
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.DiscoverySplashUrl">
            <summary>
            Returns the guilds Discovery Splash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.BannerUrl">
            <summary>
            Return the guilds Banner Url
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuild(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildCreate,System.Action{Oxide.Ext.Discord.Entities.Guilds.Guild},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new guild.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild">Create Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="create">Guild Create Object</param>
            <param name="callback">Callback with the created guild</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuild(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Guilds.Guild},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the guild object for the given id
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild">Get Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to lookup</param>
            <param name="callback">callback with the guild for the given ID</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildPreview(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildPreview},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the guild preview object for the given id.
            If the user is not in the guild, then the guild must be Discoverable.
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to get preview for</param>
            <param name="callback">Callback with the guild preview for the ID</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuild(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Guilds.Guild},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a guild's settings.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild">Modify Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the updated guild</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuild(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a guild permanently.
            User must be owner
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild">Delete Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildChannels(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Channels.Channel}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of guild channel objects.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-channels">Get Guild Channels</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the list of channels</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildChannel(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.ChannelCreate,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new channel object for the guild.
            Requires the MANAGE_CHANNELS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-channel">Create Guild Channel</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to create</param>
            <param name="callback">Callback with created channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildChannelPositions(Oxide.Ext.Discord.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.ObjectPosition},System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the positions of a set of channel objects for the guild.
            Requires MANAGE_CHANNELS permission.
            Only channels to be modified are required, with the minimum being a swap between at least two channels.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions">Modify Guild Channel Positions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="positions">List new channel positions for each channel</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildMember},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a guild member object for the specified user.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-member">Get Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">UserID to get guild member for</param>
            <param name="callback">Callback with guild member matching user Id</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ListGuildMembers(Oxide.Ext.Discord.DiscordClient,System.Int32,System.String,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.GuildMember}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of guild member objects that are members of the guild.
            In the future, this endpoint will be restricted in line with our Privileged Intents
            </summary>
            <param name="client">Client to use</param>
            <param name="limit">max number of members to return (1-1000)</param>
            <param name="afterSnowflake">The highest user id in the previous page</param>
            <param name="callback"></param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.AddGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildMember,System.String,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Roles.Role},System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildMember},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a user to the guild, provided you have a valid oauth2 access token for the user with the guilds.join scope. 
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member">Add Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="member">Member to copy from</param>
            <param name="accessToken">Member access token</param>
            <param name="roles">List of roles to grant</param>
            <param name="callback">Callback with the added guild member</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.AddGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildMember},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a user to the guild, provided you have a valid oauth2 access token for the user with the guilds.join scope. 
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member">Add Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to add</param>
            <param name="member">Member to copy from</param>
            <param name="callback">Callback with the added guild member</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildMember},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify attributes of a guild member
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member">Modify Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to update</param>
            <param name="update">Changes to make to the user</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyUsersNick(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildMember},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify attributes of a guild member
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member">Modify Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to update</param>
            <param name="nick">Nickname for the user</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyCurrentUsersNick(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{System.String},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modifies the nickname of the current user in a guild
            See <a href="https://discord.com/developers/docs/resources/guild#modify-current-user-nick">Modify Current User Nick</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="nick">New user nickname</param>
            <param name="callback">Callback with updated nickname</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.AddGuildMemberRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,Oxide.Ext.Discord.Entities.Roles.Role,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a role to a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-role">Add Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to add role to</param>
            <param name="role">Role to add</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.AddGuildMemberRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a role to a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-role">Add Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to add role to</param>
            <param name="roleId">Role ID to add</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.RemoveGuildMemberRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Users.DiscordUser,Oxide.Ext.Discord.Entities.Roles.Role,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Removes a role from a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member-role">Remove Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="user">User to remove role form</param>
            <param name="role">Role to remove</param>
            <param name="callback">callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.RemoveGuildMemberRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Removes a role from a guild member.
            Requires the MANAGE_ROLES permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member-role">Remove Guild Member Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to remove role form</param>
            <param name="roleId">Role ID to remove</param>
            <param name="callback">callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.RemoveGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildMember,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Remove a member from a guild.
            Requires KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member">Remove Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="member">Guild Member to remove</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.RemoveGuildMember(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Remove a member from a guild.
            Requires KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-member">Remove Guild Member</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to remove</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildBans(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.GuildBan}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of ban objects for the users banned from this guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-bans">Get Guild Bans</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the list of guild bans</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildBan(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildBan},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a guild ban for a specific user
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-ban">Get Guild Ban</a>
            Returns 404 if not found
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to get guild ban for</param>
            <param name="callback">Callback with the guild ban for the user</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildBan(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildMember,Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a guild ban, and optionally delete previous messages sent by the banned user.
            Requires the BAN_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Create Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="member">Guild Member to ban</param>
            <param name="ban">User ban information</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildBan(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a guild ban, and optionally delete previous messages sent by the banned user.
            Requires the BAN_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Create Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to ban</param>
            <param name="ban">User ban information</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.RemoveGuildBan(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Remove the ban for a user.
            Requires the BAN_MEMBERS permissions.
            See <a href="https://discord.com/developers/docs/resources/guild#remove-guild-ban">Remove Guild Ban</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID of the user to unban</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildRoles(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Roles.Role}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of role objects for the guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-roles">Get Guild Roles</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with a list of role objects</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Roles.Role,System.Action{Oxide.Ext.Discord.Entities.Roles.Role},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new role for the guild.
            Requires the MANAGE_ROLES permission.
            Returns the new role object on success.
            See <a href="https://discord.com/developers/docs/resources/guild#create-guild-role">Create Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">New role to create</param>
            <param name="callback">Callback with the created role</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildRolePositions(Oxide.Ext.Discord.DiscordClient,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.ObjectPosition},System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Roles.Role}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the positions of a set of role objects for the guild.
            Requires the MANAGE_ROLES permission.
            Returns a list of all of the guild's role objects on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role-positions">Modify Guild Role Positions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="positions">List of role with updated positions</param>
            <param name="callback">Callback with a list of all guild role objects</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Roles.Role,System.Action{Oxide.Ext.Discord.Entities.Roles.Role},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a guild role.
            Requires the MANAGE_ROLES permission.
            Returns the updated role on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role">Modify Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">Role to update</param>
            <param name="callback">Callback with the updated role</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Roles.Role,System.Action{Oxide.Ext.Discord.Entities.Roles.Role},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a guild role.
            Requires the MANAGE_ROLES permission.
            Returns the updated role on success.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role">Modify Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="roleId">Role ID to update</param>
            <param name="role">Role to update</param>
            <param name="callback">Callback with the updated role</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuildRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Roles.Role,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a guild role.
            Requires the MANAGE_ROLES permission
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-role">Delete Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="role">Role to Delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuildRole(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a guild role.
            Requires the MANAGE_ROLES permission
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-role">Delete Guild Role</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="roleId">Role ID to Delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildPruneCount(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet,System.Action{System.Nullable{System.Int32}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns an object with one 'pruned' key indicating the number of members that would be removed in a prune operation.
            Requires the KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-prune-count">Get Guild Prune Count</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="prune">Prune get request</param>
            <param name="callback">Callback with the number of members that would be pruned</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.BeginGuildPrune(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin,System.Action{System.Nullable{System.Int32}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Begin a prune operation.
            Requires the KICK_MEMBERS permission.
            See <a href="https://discord.com/developers/docs/resources/guild#begin-guild-prune">Begin Guild Prune</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="prune">Prune begin request</param>
            <param name="callback">Callback with number of pruned members</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildVoiceRegions(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Voice.VoiceRegion}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of voice region objects for the guild.
            Unlike the similar /voice route, this returns VIP servers when the guild is VIP-enabled.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-voice-regions">Get Guild Voice Regions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with list of guild voice regions</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildInvites(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Invites.InviteMetadata}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of invite objects (with invite metadata) for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-invites">Get Guild Invites</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with a list of guild invites</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildIntegrations(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Integrations.Integration}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of integration objects for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-integrations">Get Guild Integrations</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with a list of guild integrations</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Integrations.Integration,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Attach an integration object from the current user to the guild.
            Requires the MANAGE_GUILD permission
            </summary>
            <param name="client">Client to use</param>
            <param name="integration">Integration to create in the guild</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Integrations.IntegrationType,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Attach an integration object from the current user to the guild.
            Requires the MANAGE_GUILD permission
            </summary>
            <param name="client">Client to use</param>
            <param name="type">Type of integration to create</param>
            <param name="id">Id of the integration</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the behavior and settings of an integration object for the guild.
            Requires the MANAGE_GUILD permission
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-integration">Modify Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integrationId">ID of the integration</param>
            <param name="update">Update to make to the integration</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Integrations.Integration,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete the attached integration object for the guild.
            Deletes any associated webhooks and kicks the associated bot if there is one.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-integration">Delete Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integration">Integration to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete the attached integration object for the guild.
            Deletes any associated webhooks and kicks the associated bot if there is one.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#delete-guild-integration">Delete Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integrationId">Integration ID to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.SyncGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Integrations.Integration,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Sync an integration.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#sync-guild-integration">Sync Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integration">Integration to sync</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.SyncGuildIntegration(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Sync an integration.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#sync-guild-integration">Sync Guild Integration</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="integrationId">Integration ID to sync</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildWidgetSettings(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a guild widget object.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-widget-settings">Get Guild Widget Settings</a>
            </summary>
            <param name="client">client to use</param>
            <param name="callback">Callback with guild widget settings</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ModifyGuildWidget(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.GuildWidget,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildWidget},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a guild widget object for the guild.
            Requires the MANAGE_GUILD permission.
            See <a href="https://discord.com/developers/docs/resources/guild#modify-guild-widget">Modify Guild Widget</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="widget">Updated widget</param>
            <param name="callback">Callback with update guild widget</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildWidget(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Guilds.GuildWidget},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the widget for the guild.
            See <a href="https://discord.com/developers/docs/resources/guild#get-guild-widget">Get Guild Widget</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with guild widget</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildVanityUrl(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Invites.InviteMetadata},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a partial invite object for guilds with that feature enabled.
            Requires the MANAGE_GUILD permission.
            Code will be null if a vanity url for the guild is not set.
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with invite </param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.ListGuildEmojis(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Emojis.Emoji}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of emoji objects for the given guild.
            See <a href="https://discord.com/developers/docs/resources/emoji#list-guild-emojis">List Guild Emojis</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with list of guild emojis</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.GetGuildEmoji(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{Oxide.Ext.Discord.Entities.Emojis.Emoji},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns an emoji object for the given guild and emoji IDs.
            See <a href="https://discord.com/developers/docs/resources/emoji#get-guild-emoji">Get Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emjoiId">Emoji to lookup</param>
            <param name="callback">Callback with the guild emoji</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.CreateGuildEmoji(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Emojis.EmojiCreate,System.Action{Oxide.Ext.Discord.Entities.Emojis.Emoji},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new emoji for the guild.
            Requires the MANAGE_EMOJIS permission.
            Returns the new emoji object on success.
            See <a href="https://discord.com/developers/docs/resources/emoji#create-guild-emoji">Create Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to create</param>
            <param name="callback">Callback with the created emoji</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.UpdateGuildEmoji(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Emojis.EmojiUpdate,System.Action{Oxide.Ext.Discord.Entities.Emojis.Emoji},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the given emoji.
            Requires the MANAGE_EMOJIS permission.
            Returns the updated emoji object on success.
            See <a href="https://discord.com/developers/docs/resources/emoji#modify-guild-emoji">Modify Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emojiId">Emoji ID to update</param>
            <param name="emoji">Emoji update</param>
            <param name="callback">Callback with the updated emoji</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.Guild.DeleteGuildEmoji(Oxide.Ext.Discord.DiscordClient,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete the given emoji.
            Requires the MANAGE_EMOJIS permission.
            See <a href="https://discord.com/developers/docs/resources/emoji#delete-guild-emoji">Delete Guild Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emojiId">Emoji ID to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.Guild.IsAvailable">
            <summary>
            Returns if the guild is avaiable to use
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildBan">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#ban-object-ban-structure">Guild Ban Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBan.Reason">
            <summary>
            The reason for the ban
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBan.User">
            <summary>
            The banned user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#create-guild-ban">Guild Ban Create Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate.DeleteMessageDays">
            <summary>
            Number of days to delete messages for (0-7)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildBanCreate.Reason">
            <summary>
            Reason for the ban
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildCreate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#create-guild">Create Guild Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Region">
            <summary>
            Voice region id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.VerificationLevel">
            <summary>
            Verification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.DefaultMessageNotifications">
            <summary>
            Default message notification level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.ExplicitContentFilter">
            <summary>
            Explicit content filter level
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Roles">
            <summary>
            Roles in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.Channels">
            <summary>
            Channels in the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.AfkChannelId">
            <summary>
            ID of afk channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.AfkTimeout">
            <summary>
            Afk timeout in seconds
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildCreate.SystemChannelId">
            <summary>
            The id of the channel where guild notices such as welcome messages and boost events are posted
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-guild-features">Guild Features</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.InviteSplash">
            <summary>
            Guild has access to set an invite splash background
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.VipRegions">
            <summary>
            Guild has access to set 384kbps bitrate in voice (previously VIP voice servers)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.VanityUrl">
            <summary>
            Guild has access to set a vanity URL
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Verified">
            <summary>
            Guild is verified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Partnered">
            <summary>
            Guild is partnered
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Community">
            <summary>
            Guild can enable welcome screen and discovery, and receives community updates
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Commerce">
            <summary>
            Guild has access to use commerce features (i.e. create store channels)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.News">
            <summary>
            Guild has access to create news channels
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Discoverable">
            <summary>
            Guild is lurkable and able to be discovered in the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Featurable">
            <summary>
            Guild is able to be featured in the directory
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.AnimatedIcon">
            <summary>
            Guild has access to set an animated guild icon
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.Banner">
            <summary>
            Guild has access to set a guild banner image
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures.WelcomeScreenEnabled">
            <summary>
            Guild has enabled the welcome screen
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure">Guild Member Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.User">
            <summary>
            The user this guild member represents
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Nick">
            <summary>
            This users guild nickname
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Roles">
            <summary>
            List of member roles
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.JoinedAt">
            <summary>
            When the user joined the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.PremiumSince">
            <summary>
            When the user started boosting the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Permissions">
            <summary>
            Total permissions of the member in the channel, including overrides, returned when in the interaction object
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Deaf">
            <summary>
            Whether the user is deafened in voice channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Mute">
            <summary>
            Whether the user is muted in voice channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMember.Pending">
            <summary>
            Whether the user has not yet passed the guild's Membership Screening requirements
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildMember.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#add-guild-member-json-params">Guild Member Add</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.AccessToken">
            <summary>
            An oauth2 access token granted with the guilds.join to the bot's application for the user you want to add to the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Nick">
            <summary>
            Value to set users nickname to
            Requires permission MANAGE_NICKNAMES
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Roles">
            <summary>
            Role ids the member is assigned
            Requires permission MANAGE_ROLES
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Mute">
            <summary>
            Whether the user is muted in voice channels
            Requires permission MUTE_MEMBERS
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberAdd.Deaf">
            <summary>
            Whether the user is deafened in voice channels
            Requires permission DEAFEN_MEMBERS
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-member-json-params">Guild Member Update Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Nick">
            <summary>
            The nickname to give the user
            Requires MANAGE_NICKNAMES Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Roles">
            <summary>
            New list of guild members roles
            Will replaces all roles with the ones in this list
            Requires MANAGE_ROLES Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Deaf">
            <summary>
            Deafen the guild member
            Requires DEAFEN_MEMBERS Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.Mute">
            <summary>
            Mute the guild member
            Requires MUTE_MEMBERS Permission
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildMemberUpdate.ChannelId">
            <summary>
            The channel to move the user to
            Requires MOVE_MEMBERS Permission
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildMFALevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-mfa-level">MFA Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMFALevel.None">
            <summary>
            Guild does not require MFA
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildMFALevel.Elevated">
            <summary>
            Guild requires elevated MFA
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-verification-level">Verification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.None">
            <summary>
            Guild does not have any premium tier
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier1">
            <summary>
            Guild is premium tier 1
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier2">
            <summary>
            Guild is premium tier 2
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildPremiumTier.Tier3">
            <summary>
            Guild is premium tier 3
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPreview">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-preview-object">Guild Preview Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Id">
            <summary>
            Guild id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Name">
            <summary>
            Name of the guild (2-100 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Icon">
            <summary>
            Base64 128x128 image for the guild icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Splash">
            <summary>
            Splash hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.DiscoverySplash">
            <summary>
            Discovery splash hash
            Only present for guilds with the "DISCOVERABLE" feature
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Emojis">
            <summary>
            Custom guild emojis
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Features">
            <summary>
            Enabled guild features
            See <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildFeatures"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.ApproximateMemberCount">
            <summary>
            Approximate number of members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.ApproximatePresenceCount">
            <summary>
            Approximate number of non-offline members in this guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPreview.Description">
            <summary>
            The description for the guild, if the guild is discoverable
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#begin-guild-prune">Guild Prune Begin</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin.ComputePruneCount">
            <summary>
            Whether 'pruned' is returned, discouraged for large guilds
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildPruneBegin.ToQueryString">
            <summary>
            Returns Guild Prune Begin query string for the API Endpoint
            </summary>
            <returns>Guild Prune Begin Query String</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#get-guild-prune-count">Guild Prune Get</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.Days">
            <summary>
            Number of days to count prune for (1 - 30)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.IncludeRoles">
            <summary>
            List of roles to include
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Guilds.GuildPruneGet.ToQueryString">
            <summary>
            Returns the query string for the Guild Prune Get endpoint
            </summary>
            <returns>Guild Prune Get Query String</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-verification-level">Verification Level</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.None">
            <summary>
            Unrestricted
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.Low">
            <summary>
            Must have verified email on account
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.Medium">
            <summary>
            Must be registered on Discord for longer than 5 minutes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.High">
            <summary>
            Must be a member of the server for longer than 10 minutes
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.GuildVerificationLevel.VeryHigh">
            <summary>
            Must have a verified phone number
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-structure">Welcome Screen Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen.Description">
            <summary>
            The server description shown in the welcome screen
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreen.WelcomeChannels">
            <summary>
            The channels shown in the welcome screen
            Up to 5
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure">Welcome Screen Channel Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.ChannelId">
            <summary>
            Channel ID for the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.Description">
            <summary>
            The description shown for the channel
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.EmojiId">
            <summary>
            The emoji id, if the emoji is custom
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWelcomeScreenChannel.EmojiName">
            <summary>
            The emoji name if custom, the unicode character if standard, or null if no emoji is set
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWidget">
            <summary>
            Represents <a href=""></a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Id">
            <summary>
            ID of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Name">
            <summary>
            Name of the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.InstantInvite">
            <summary>
            Instant invite line for the guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Channels">
            <summary>
            List of guild channels
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.Members">
            <summary>
            List of guild members
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidget.PresenceCount">
            <summary>
            The count of the presences
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-widget-object-guild-widget-structure">Guild Widget Settings Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings.Enabled">
            <summary>
            Whether the widget is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.GuildWidgetSettings.ChannelId">
            <summary>
            The widget channel id
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.ObjectPosition">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions">Modify Guild Channel Position</a>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-role-positions">Modify Guild Role Position</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ObjectPosition.Id">
            <summary>
            ID of the channel or role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Guilds.ObjectPosition.Position">
            <summary>
            New position for the role / channel
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags">System Channel Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressJoinNotifications">
            <summary>
            Suppress member join notifications
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Guilds.SystemChannelFlags.SuppressPremiumSubscriptions">
            <summary>
            	Suppress server boost notifications
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.Integration">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-object">Integration Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Id">
            <summary>
            Integration ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Name">
            <summary>
            Integration Name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Type">
            <summary>
            Integration type
            See <see cref="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Enabled">
            <summary>
            Is this integration enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Syncing">
            <summary>
            Is this integration syncing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.RoleId">
            <summary>
            ID that this integration uses for "subscribers"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.User">
            <summary>
            User for this integration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Account">
            <summary>
            Integration account information
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.SyncedAt">
            <summary>
            When this integration was last synced
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.SubscriberCount">
            <summary>
            How many subscribers this integration has
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Revoked">
            <summary>
            Has this integration been revoked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Integration.Application">
            <summary>
            The bot/OAuth2 application for discord integrations
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Integrations.Integration.GetEntityId">
            <summary>
            Returns the entity ID for this entity
            </summary>
            <returns>This entities ID</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.Account">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-account-object">Integration Account Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Account.Id">
            <summary>
            ID of the account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.Account.Name">
            <summary>
            Name of the account
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-application-object">Integration Application Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Id">
            <summary>
            The ID of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Name">
            <summary>
            The name of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Icon">
            <summary>
            The icon hash of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Description">
            <summary>
            The description of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Summary">
            <summary>
            The description of the app
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationApplication.Bot">
            <summary>
            The bot associated with this application
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors">Integration Expire Behaviors</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors.RemoveRole">
            <summary>
            Remove the role when integration expires
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationExpireBehaviors.Kick">
            <summary>
            Kick when integration expires
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationType">
            <summary>
            Represents Integrations types
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Twitch">
            <summary>
            Integration is for twitch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Youtube">
            <summary>
            Integration is for youtube
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Integrations.IntegrationType.Discord">
            <summary>
            integration is for discord
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/guild#modify-guild-integration-json-params">Integration Update Structure</a> 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.EnableEmoticons">
            <summary>
            Whether emoticons should be synced for this integration (twitch only currently)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.ExpireBehaviour">
            <summary>
            The behavior when an integration subscription lapses
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Integrations.IntegrationUpdate.ExpireGracePeriod">
            <summary>
            Period (in days) where the integration will ignore lapsed subscriptions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.Invite">
            <summary>
            Represents an <a href="https://discord.com/developers/docs/resources/invite#invite-object">Invite Structure</a> that when used, adds a user to a guild or group DM channel.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.Code">
            <summary>
            The invite code (unique ID)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.Guild">
            <summary>
            The guild this invite is for
            See <see cref="P:Oxide.Ext.Discord.Entities.Invites.Invite.Guild"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.Channel">
            <summary>
            The channel this invite is for
            See <see cref="P:Oxide.Ext.Discord.Entities.Invites.Invite.Channel"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.Inviter">
            <summary>
            The user who created the invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.TargetUser">
            <summary>
            The target user for this invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.UserTargetType">
            <summary>
            The type of user target for this invite
            See <see cref="T:Oxide.Ext.Discord.Entities.Invites.TargetUserType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.ApproximatePresenceCount">
            <summary>
            Approximate count of online members (only present when target_user is set)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.Invite.ApproximateMemberCount">
            <summary>
            Approximate count of total members
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Invites.Invite.GetInvite(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{Oxide.Ext.Discord.Entities.Invites.Invite},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Get Invite URL Parameters
            See <a href="https://discord.com/developers/docs/resources/invite#get-invite">Get Invite</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="inviteCode">Invite code</param>
            <param name="callback">Callback with the invite</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Invites.Invite.DeleteInvite(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Invites.Invite},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete an invite.
            Requires the MANAGE_CHANNELS permission on the channel this invite belongs to, or MANAGE_GUILD to remove any invite across the guild.
            Returns an invite object on success.
            See <a href="https://discord.com/developers/docs/resources/invite#delete-invite">Delete Invite</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the deleted invite</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.InviteMetadata">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/invite#invite-metadata-object-invite-metadata-structure">Invite Metadata Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.Uses">
            <summary>
            Number of times this invite has been used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.MaxUses">
            <summary>
            Max number of times this invite can be used
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.MaxAge">
            <summary>
            Duration (in seconds) after which the invite expires
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.Temporary">
            <summary>
            Whether this invite only grants temporary membership
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Invites.InviteMetadata.CreatedAt">
            <summary>
            When this invite was created
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Invites.TargetUserType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/invite#invite-object-target-user-types">Target User Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Invites.TargetUserType.Undefined">
            <summary>
            Target user type is not defined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Invites.TargetUserType.Stream">
            <summary>
            Invite is for a go live stream
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#allowed-mentions-object">Allowed Mention Types</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.Parse">
            <summary>
            An array of allowed mention types to parse from the content.
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.Roles">
            <summary>
            Array of Role IDs to mention (Max size of 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.Users">
            <summary>
            Array of User IDs to mention (Max size of 100)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMention.RepliedUser">
            <summary>
            For replies, whether to mention the author of the message being replied to (default false)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes">
            <summary>
             Represents a <a href="https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types">Allowed Mention Types</a> for a message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Roles">
            <summary>
            Controls role mentions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Users">
            <summary>
            	Controls user mentions
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.AllowedMentions.AllowedMentionTypes.Everyone">
            <summary>
            Controls @everyone and @here mentions
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Attachment">
            <summary>
            Represents a message <a href="https://discord.com/developers/docs/resources/channel#message-object">Attachment Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Id">
            <summary>
            Attachment ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Filename">
            <summary>
            Name of file attached
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Size">
            <summary>
            Size of file in bytes
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Url">
            <summary>
            Source url of file
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.ProxyUrl">
            <summary>
            A proxied url of file
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Height">
            <summary>
            Height of file (if image)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Attachment.Width">
            <summary>
            Width of file (if image)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Attachment.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object">Embed Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Title">
            <summary>
            Title of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Type">
            <summary>
            Type of embed (always "rich" for webhook embeds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Description">
            <summary>
            Description of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Url">
            <summary>
            Url of embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Timestamp">
            <summary>
            Timestamp of embed content
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Color">
            <summary>
            Color code of the embed
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Footer">
            <summary>
            Footer information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Image">
            <summary>
            Image information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Thumbnail">
            <summary>
            Thumbnail information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Video">
            <summary>
            Video information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Provider">
            <summary>
            Provider information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Author">
            <summary>
            Author information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.Fields">
            <summary>
            Fields information
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddTitle(System.String)">
            <summary>
            Adds a title to the embed message
            </summary>
            <param name="title">Title to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddDescription(System.String)">
            <summary>
            Adds a description to the embed message
            </summary>
            <param name="description">description to add</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddUrl(System.String)">
            <summary>
            Adds a url to the embed message
            </summary>
            <param name="url"></param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddAuthor(System.String,System.String,System.String,System.String)">
            <summary>
            Adds an author to the embed message. The author will appear above the title
            </summary>
            <param name="name">Name of the author</param>
            <param name="iconUrl">Icon Url to use for the author</param>
            <param name="url">Url to go to when the authors name is clicked on</param>
            <param name="proxyIconUrl">Backup icon url. Can be left null if you only have one icon url</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddFooter(System.String,System.String,System.String)">
            <summary>
            Adds a footer to the embed message
            </summary>
            <param name="text">Text to be added to the footer</param>
            <param name="iconUrl">Icon url to add in the footer. Appears to the left of the text</param>
            <param name="proxyIconUrl">Backup icon url. Can be left null if you only have one icon url</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddColor(System.UInt32)">
            <summary>
            Adds an int based color to the embed. Color appears as a bar on the left side of the message
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddColor(System.String)">
            <summary>
            Adds a hex based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="color">Color in string hex format</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Exception thrown if color is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a RGB based color. Color appears as a bar on the left side of the message
            </summary>
            <param name="red">Red value between 0 - 255</param>
            <param name="green">Green value between 0 - 255</param>
            <param name="blue">Blue value between 0 - 255</param>
            <returns>This</returns>
            <exception cref="T:System.Exception">Thrown if red, green, or blue is outside of range</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddBlankField(System.Boolean)">
            <summary>
            Adds a blank field.
            If inline it will add a blank column.
            If not inline will add a blank row
            </summary>
            <param name="inline">If the field is inline</param>
            <returns>This</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddField(System.String,System.String,System.Boolean)">
            <summary>
            Adds a new field with the name as the title and value as the value.
            If inline will add a new column. If row will add in a new row.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="inline"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddImage(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds an image to the embed. The url should point to the url of the image.
            If using attachment image you can make the url: "attachment://{image name}.{image extension}
            </summary>
            <param name="url">Url for the image</param>
            <param name="width">width of the image</param>
            <param name="height">height of the image</param>
            <param name="proxyUrl">Backup url for the image</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddThumbnail(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a thumbnail in the top right corner of the embed
            If using attachment image you can make the url: "attachment://{image name}.{image extension}
            </summary>
            <param name="url">Url for the image</param>
            <param name="width">width of the image</param>
            <param name="height">height of the image</param>
            <param name="proxyUrl">Backup url for the image</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddVideo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a video to the embed
            </summary>
            <param name="url">Url for the video</param>
            <param name="width">Width of the video</param>
            <param name="height">Height of the video</param>
            <param name="proxyUrl">Proxy Url for the video</param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.Embed.AddProvider(System.String,System.String)">
            <summary>
            Adds a provider to the embed
            </summary>
            <param name="name">Name for the provider</param>
            <param name="url">Url for the provider</param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure">Embed Author Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.Name">
            <summary>
            Name of author
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.Url">
            <summary>
            Url of author
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.IconUrl">
            <summary>
            Url of author icon (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.ProxyIconUrl">
            <summary>
            A proxied url of author icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedAuthor.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Embed Author Constructor
            </summary>
            <param name="name"></param>
            <param name="url"></param>
            <param name="iconUrl"></param>
            <param name="proxyIconUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure">Embed Field Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Name">
            <summary>
            Name of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Value">
            <summary>
            Value of the field
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.Inline">
            <summary>
            Whether or not this field should display inline
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedField.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Embed Field constructor
            </summary>
            <param name="name">Field Name</param>
            <param name="value">Field Value</param>
            <param name="inline">Should field be inlined</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure">Embed Footer Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.Text">
            <summary>
            Footer text
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.IconUrl">
            <summary>
            Url of footer icon (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.ProxyIconUrl">
            <summary>
            A proxied url of footer icon
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedFooter.#ctor(System.String,System.String,System.String)">
            <summary>
            Embed Footer Constructor
            </summary>
            <param name="text"></param>
            <param name="iconUrl"></param>
            <param name="proxyIconUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure">Embed Image Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Url">
            <summary>
            Source url of image (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.ProxyUrl">
            <summary>
            A proxied url of the image
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Height">
            <summary>
            Height of image
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.Width">
            <summary>
            Width of image
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedImage.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Image Constructor
            </summary>
            <param name="url"></param>
            <param name="height"></param>
            <param name="width"></param>
            <param name="proxyUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure">Embed Provider Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.Name">
            <summary>
            Name of provider
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.Url">
            <summary>
            Url of provider
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedProvider.#ctor(System.String,System.String)">
            <summary>
            Embed Provider Constructor
            </summary>
            <param name="name"></param>
            <param name="url"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure">Embed Thumbnail Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Url">
            <summary>
            Source url of thumbnail (only supports http(s) and attachments)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.ProxyUrl">
            <summary>
            A proxied url of the thumbnail
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Height">
            <summary>
            Height of thumbnail
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.Width">
            <summary>
            Width of thumbnail
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedThumbnail.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Thumbnail constructor
            </summary>
            <param name="url"></param>
            <param name="height"></param>
            <param name="width"></param>
            <param name="proxyUrl"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure">Embed Video Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Url">
            <summary>
            Source url of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.ProxyUrl">
            <summary>
            Source url of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Height">
            <summary>
            Height of video
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.Width">
            <summary>
            Width of video
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Embeds.EmbedVideo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Embed Video Constructor
            </summary>
            <param name="url"></param>
            <param name="proxyUrl"></param>
            <param name="height"></param>
            <param name="width"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Message">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object">Message Structure</a> sent in a channel within Discord..
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Id">
            <summary>
            ID of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.ChannelId">
            <summary>
            ID of the channel the message was sent in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.GuildId">
            <summary>
            ID of the guild the message was sent in
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Author">
            <summary>
            the author of this message (not guaranteed to be a valid user)
             The author object follows the structure of the user object, but is only a valid user in the case where the message is generated by a user or bot user.
            If the message is generated by a webhook, the author object corresponds to the webhook's id, username, and avatar.
            You can tell if a message is generated by a webhook by checking for the webhook_id on the message object.
            <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Member">
            <summary>
            Member properties for this message's author
            <see cref="T:Oxide.Ext.Discord.Entities.Guilds.GuildMember"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Content">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Timestamp">
            <summary>
            When this message was sent
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.EditedTimestamp">
            <summary>
            When this message was edited (or null if never)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Tts">
            <summary>
            Whether this was a TTS message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.MentionEveryone">
            <summary>
            Whether this message mentions everyone
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Mentions">
            <summary>
            Users specifically mentioned in the message
            <see cref="T:Oxide.Ext.Discord.Entities.Users.DiscordUser"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.MentionRoles">
            <summary>
            Roles specifically mentioned in this message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.MentionsChannels">
            <summary>
            Channels specifically mentioned in this message
            <see cref="T:Oxide.Ext.Discord.Entities.Channels.ChannelMention"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Attachments">
            <summary>
            Any attached files
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Attachment"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Embeds">
            <summary>
            Any embedded content
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.Message.Embeds"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Reactions">
            <summary>
            Reactions to the message
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.Reaction"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Nonce">
            <summary>
            Used for validating a message was sent
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Pinned">
            <summary>
            Whether this message is pinned
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.WebhookId">
            <summary>
            If the message is generated by a webhook, this is the webhook's id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Type">
            <summary>
            Type of message
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Activity">
            <summary>
            Sent with Rich Presence-related chat embeds
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageActivity"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Application">
            <summary>
            Sent with Rich Presence-related chat embeds
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageApplication"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Flags">
            <summary>
            Message flags combined as a bitfield
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.Stickers">
            <summary>
            The stickers sent with the message (bots currently can only receive messages with stickers, not send)
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageSticker"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Message.ReferencedMessage">
            <summary>
            The message associated with the message_reference
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CreateMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Messages.MessageCreate,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="message">Message to be created</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CreateMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="message">Content of the message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CreateMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Messages.Embeds.Embed,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Post a message to a guild text or DM channel.
            If operating on a guild channel, this endpoint requires the SEND_MESSAGES permission to be present on the current user.
            If the tts field is set to true, the SEND_TTS_MESSAGES permission is required for the message to be spoken.
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to send the message to</param>
            <param name="embed">Embed to be send in the message</param>
            <param name="callback">Callback with the created message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.Reply(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to send</param>
            <param name="callback">Callback with the message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.Reply(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message text to send</param>
            <param name="callback">Callback with the message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.Reply(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.Embed,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Replies to a previously sent message
            See <a href="https://discord.com/developers/docs/resources/channel#create-message">Create Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="embed">Embed to send</param>
            <param name="callback">Callback with the message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CrossPostMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Crosspost a message in a News Channel to following channels.
            This endpoint requires the 'SEND_MESSAGES' permission, if the current user sent the message, or additionally the 'MANAGE_MESSAGES' permission, for all other messages, to be present for the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#crosspost-message">Crosspost Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to cross post</param>
            <param name="callback">Callback with the cross posted message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CrossPostMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Message,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Crosspost a message in a News Channel to following channels.
            This endpoint requires the 'SEND_MESSAGES' permission, if the current user sent the message, or additionally the 'MANAGE_MESSAGES' permission, for all other messages, to be present for the current user.
            See <a href="https://discord.com/developers/docs/resources/channel#crosspost-message">Crosspost Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="message">Message to cross post</param>
            <param name="callback">Callback with the cross posted message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.CreateReaction(Oxide.Ext.Discord.DiscordClient,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a reaction for the message.
            This endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user.
            Additionally, if nobody else has reacted to the message using this emoji, this endpoint requires the 'ADD_REACTIONS' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#create-reaction">Create Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to react with.</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteOwnReaction(Oxide.Ext.Discord.DiscordClient,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a reaction the current user has made for the message
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-own-reaction">Delete Own Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteUserReaction(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Users.DiscordUser,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes another user's reaction.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-user-reaction">Delete User Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
            <param name="user">User who add the reaction</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteUserReaction(Oxide.Ext.Discord.DiscordClient,System.String,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes another user's reaction.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-user-reaction">Delete User Reaction</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete</param>
            <param name="userId">User ID who add the reaction</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.GetReactions(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Users.DiscordUser}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Get a list of users that reacted with this emoji
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#get-reactions">Get Reactions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to get the list for</param>
            <param name="callback">Callback with a list of users who reacted</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteAllReactions(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes all reactions on a message.
            This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user.
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteAllReactionsForEmoji(Oxide.Ext.Discord.DiscordClient,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes all the reactions for a given emoji on a message.
            This endpoint requires the MANAGE_MESSAGES permission to be present on the current user.
            Valid emoji formats are the unicode emoji character '😀' or for custom emoji format must be &lt;emojiName:emojiId&gt;
            See <a href="https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji">Delete All Reactions for Emoji</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="emoji">Emoji to delete all reactions for</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.EditMessage(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edit a previously sent message.
            The fields content, embed, allowed_mentions and flags can be edited by the original message author.
            Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel.
            When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying.
            Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error).
            See <a href="https://discord.com/developers/docs/resources/channel#edit-message">Edit Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the updated message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeleteMessage(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a message.
            If operating on a guild channel and trying to delete a message that was not sent by the current user, this endpoint requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-message">Delete Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the delete message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.AddPinnedChannelMessage(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Pin a message in a channel.
            Requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#add-pinned-channel-message">Add Pinned Channel Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback when the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Message.DeletePinnedChannelMessage(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a pinned message in a channel.
            Requires the MANAGE_MESSAGES permission.
            See <a href="https://discord.com/developers/docs/resources/channel#delete-pinned-channel-message">Delete Pinned Channel Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageActivity">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object">Message Activity Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageActivity.Type">
            <summary>
            Type of message activity
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageActivityType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageActivity.PartyId">
            <summary>
            Party ID from a Rich Presence event
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageActivityType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-activity-types">Message Activity Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Join">
            <summary>
            Message Activity Join
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Spectate">
            <summary>
            Message Activity Spectate
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.Listen">
            <summary>
            Message Activity Listen
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageActivityType.JoinRequest">
            <summary>
            Message Activity JoinRequest
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageApplication">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-application-structure">Message Application Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageApplication.Id">
            <summary>
            ID of the application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageApplication.CoverImage">
            <summary>
            ID of the embed's image asset
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageApplication.Description">
            <summary>
            Application's description
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageApplication.Icon">
            <summary>
            ID of the application's icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageApplication.Name">
            <summary>
            Name of the application
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageCreate">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#create-message-parameters-for-contenttype-applicationjson">Message Create Structure</a> to be created in discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.Content">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.Nonce">
            <summary>
            Used for validating a message was sent
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.Tts">
            <summary>
            Whether this was a TTS message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.Embed">
            <summary>
            Embed for the message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.AllowedMention">
            <summary>
            Allowed mentions for a message
            Allows for more granular control over mentions without various hacks to the message content. 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageCreate.MessageReference">
            <summary>
            Include to make your message a reply
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#message-object-message-flags">Message Flags</a> for a message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.CrossPosted">
            <summary>
            This message has been published to subscribed channels (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.IsCrossPost">
            <summary>
            This message originated from a message in another channel (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.SuppressEmbeds">
            <summary>
            Do not include any embeds when serializing this message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.SourceMessageDeleted">
            <summary>
            The source message for this crosspost has been deleted (via Channel Following)
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageFlags.Urgent">
            <summary>
            This message came from the urgent message system
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageReference">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-reference-structure">Message Reference Structure</a> for a message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.MessageId">
            <summary>
            ID of the originating message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.ChannelId">
            <summary>
            ID of the originating message's channel
            Is optional when creating a reply, but will always be present when receiving an event/response that includes this data model.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.GuildId">
            <summary>
            ID of the originating message's guild
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageReference.FailIfNotExists">
            <summary>
            When sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageSticker">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#message-object-message-sticker-structure">Message Sticker Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.Id">
            <summary>
            ID of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.PackId">
            <summary>
            ID of the pack the sticker is from
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.Name">
            <summary>
            Name of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.Description">
            <summary>
            Description of the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.Tags">
            <summary>
            A comma-separated list of tags for the sticker
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.Asset">
            <summary>
            Sticker asset hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.PreviewAsset">
            <summary>
            Sticker preview asset hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.MessageSticker.FormatType">
            <summary>
            Type of sticker format
            <see cref="T:Oxide.Ext.Discord.Entities.Messages.MessageStickerFormatType"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.MessageSticker.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageStickerFormatType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#message-object-message-sticker-format-types">Message Sticker Format Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageStickerFormatType.Png">
            <summary>
            Sticker format type PNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageStickerFormatType.Apng">
            <summary>
            Sticker format type APNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageStickerFormatType.Lottie">
            <summary>
            Sticker format type LOTTIE
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.MessageType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/channel#message-object-message-types">Message Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Default">
            <summary>
            The default message type
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.RecipientAdd">
            <summary>
            The message when a recipient is added
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.RecipientRemove">
            <summary>
            The message when a recipient is removed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Call">
            <summary>
            The message when a user is called
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelNameChange">
            <summary>
            The message when a channel name is changed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelIconChange">
            <summary>
            The message when a channel icon is changed
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelPinnedMessage">
            <summary>
            The message when another message is pinned
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildMemberJoin">
            <summary>
            The message when a new member joined
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.UserPremiumGuildSubscription">
            <summary>
             The message for when a user boosts a guild
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.UserPremiumGuildSubscriptionTier1">
            <summary>
            The message for when a guild reaches Tier 1 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.UserPremiumGuildSubscriptionTier2">
            <summary>
            The message for when a guild reaches Tier 2 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.UserPremiumGuildSubscriptionTier3">
            <summary>
            The message for when a guild reaches Tier 3 of Nitro boosts
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ChannelFollowAdd">
            <summary>
            The message for when a news channel subscription is added to a text channel
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryDisqualified">
            <summary>
            The message for when a guild discovery is disqualified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.GuildDiscoveryRequalified">
            <summary>
            The message for when a guild discovery is requalified
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.Reply">
            <summary>
            The message for when the message is a reply
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Messages.MessageType.ApplicationCommand">
            <summary>
            The message for when the message is an application command
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Messages.Reaction">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/channel#reaction-object">Reaction Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Reaction.Count">
            <summary>
            Times this emoji has been used to react
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Reaction.Me">
            <summary>
            Whether the current user reacted using this emoji
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Messages.Reaction.Emoji">
            <summary>
            Emoji information
            <see cref="P:Oxide.Ext.Discord.Entities.Messages.Reaction.Emoji"/>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Messages.Reaction.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Roles.DiscordColor">
            <summary>
            Represents a Discord Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Default">
            <summary>
            Default Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Teal">
            <summary>
            Teal Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkTeal">
            <summary>
            Dark Teal Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Green">
            <summary>
            Green Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkGreen">
            <summary>
            Dark Green Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Blue">
            <summary>
            Blue Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkBlue">
            <summary>
            Dark Blue Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Purple">
            <summary>
            Purple Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkPurple">
            <summary>
            Dark Purple Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Magenta">
            <summary>
            Magenta Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkMagenta">
            <summary>
            Dark Magenta Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Gold">
            <summary>
            Gold Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.LightOrange">
            <summary>
            Light Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Orange">
            <summary>
            Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkOrange">
            <summary>
            Dark Orange Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Red">
            <summary>
            Red Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkRed">
            <summary>
            Dark Red Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.LightGrey">
            <summary>
            Light Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.LighterGrey">
            <summary>
            Lighter Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkGrey">
            <summary>
            Dark Gray Role Color
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Roles.DiscordColor.DarkerGrey">
            <summary>
            Darker Gray Role Color
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.DiscordColor.Color">
            <summary>
            uint value of the hex color code
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColor.#ctor(System.UInt32)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="color">uint value of hex color code</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColor.#ctor(System.String)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="color">string hex color code</param>
            <exception cref="T:System.Exception">Throw if color is greater than #FFFFFF</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColor.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0-255)</param>
            <param name="green">Green color (0-255)</param>
            <param name="blue">Blue color (0-255)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &lt; 0 or &gt; 255</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            DiscordColor Constructor
            </summary>
            <param name="red">Red color (0.0 - 1.0)</param>
            <param name="green">Green color (0.0 - 1.0)</param>
            <param name="blue">Blue color (0.0 - 1.0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if any of the colors are &lt; 0.0 or &gt; 1.0</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Roles.DiscordColorConverter">
            <summary>
            Handles the JSON Serialization / Deserialization for DiscordColor
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes to JSON
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads from JSON
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.DiscordColorConverter.CanConvert(System.Type)">
            <summary>
            Check if can convert
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Roles.Role">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#role-object">Role Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Id">
            <summary>
            Role id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Name">
            <summary>
            Role name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Color">
            <summary>
            Role Color
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Hoist">
            <summary>
            If this role is pinned in the user listing
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Position">
            <summary>
            Position of this role
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Permissions">
            <summary>
            Role Permissions
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Managed">
            <summary>
            Whether this role is managed by an integration
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Mentionable">
            <summary>
            Whether this role is mentionable
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.Role.Tags">
            <summary>
            The tags this role has
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Roles.Role.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Roles.RoleTags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/permissions#role-object-role-tags-structure">Role Tags Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.RoleTags.BotId">
            <summary>
            The id of the bot this role belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.RoleTags.IntegrationId">
            <summary>
            The id of the integration this role belongs to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Roles.RoleTags.PremiumSubscriber">
            <summary>
            Whether this is the guild's premium subscriber role
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Snowflake">
            <summary>
            Represents an ID in discord.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Snowflake.Id">
            <summary>
            Snowflake Value
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.UInt64)">
            <summary>
            Create a new snowflake from a ulong
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.String)">
            <summary>
            Create a new snowflake from a string
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.#ctor(System.DateTimeOffset)">
            <summary>
            Create a snowflake from a DateTimeOffset
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.GetCreationTime">
            <summary>
            Returns when the ID was created
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.TryParse(System.String,Oxide.Ext.Discord.Entities.Snowflake@)">
            <summary>
            Try to parse the a string into a snowflake value
            </summary>
            <param name="value">String to parse</param>
            <param name="snowflake">Snowflake to return</param>
            <returns>True is parse succeeded; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if the two snowflakes are the same ID.
            </summary>
            <param name="other">Other snowflake to compare</param>
            <returns>True if the snowflake IDs match; false otherwise.</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(System.Object)">
            <summary>
            Returns if the obj is snowflake or ulong with matching ID.
            </summary>
            <param name="obj">Object to check</param>
            <returns>True if equal; False otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.Equals(System.UInt64)">
            <summary>
            Returns if other equals our ID
            </summary>
            <param name="other">Other to compare against</param>
            <returns>True if ID equals; False otherwise.</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.GetHashCode">
            <summary>
            Returns the HashCode of the ID
            </summary>
            <returns>ID fields hashcode</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.ToString">
            <summary>
            Returns ID as a string
            </summary>
            <returns>ID as a string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.CompareTo(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the ID field of num compared to this snowflakes ID field
            </summary>
            <param name="num">Value to compare ID to</param>
            <returns>A value indication if the num is less than, equal to, or greater than our ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.CompareTo(System.UInt64)">
            <summary>
            Returns the ID field of num compared to this snowflakes ID field
            </summary>
            <param name="other">Value to compare ID to</param>
            <returns>A value indication if the num is less than, equal to, or greater than our ID</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Equality(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left and right are equal
            </summary>
            <param name="left">Snowflake to compare</param>
            <param name="right">Snowflake to compare</param>
            <returns>True if the snowflake ID's are equal; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Inequality(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left and right are not equal
            </summary>
            <param name="left">Snowflake to compare</param>
            <param name="right">Snowflake to compare</param>
            <returns>True if the snowflake ID's are not equal; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_LessThan(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is less than right's ID
            </summary>
            <param name="left">Snowflake to be less than</param>
            <param name="right">Snowflake to be greater than</param>
            <returns>True if left is less than right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_GreaterThan(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is greater than right's ID
            </summary>
            <param name="left">Snowflake to be greater than</param>
            <param name="right">Snowflake to be less than</param>
            <returns>True if left is greater than right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_LessThanOrEqual(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is less than right's ID or equal
            </summary>
            <param name="left">Snowflake to be less than or equal</param>
            <param name="right">Snowflake to be greater than or equal</param>
            <returns>True if left is less than or equal to right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_GreaterThanOrEqual(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns true if left snowflake's ID is greater or equal to right's ID
            </summary>
            <param name="left">Snowflake to be greater than or equal</param>
            <param name="right">Snowflake to be less than or equal</param>
            <returns>True if left is greater or equal to right</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Implicit(Oxide.Ext.Discord.Entities.Snowflake)~System.UInt64">
            <summary>
            Converts snowflake to a ulong
            </summary>
            <param name="snowflake">Snowflake to be converted to ulong</param>
            <returns>Snowflake ID as ulong</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Snowflake.op_Explicit(System.UInt64)~Oxide.Ext.Discord.Entities.Snowflake">
            <summary>
            Converts a ulong to a snowflake
            </summary>
            <param name="id">Id to be converted to snowflake</param>
            <returns>ID converted to a snowflake</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.Team">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/topics/teams#data-models-team-object">Team Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.Team.Id">
            <summary>
            The unique id of the team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.Team.Icon">
            <summary>
            A hash of the image of the team's icon
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.Team.Members">
            <summary>
            The members of the team
            See <see cref="T:Oxide.Ext.Discord.Entities.Teams.TeamMember"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.Team.OwnerUserId">
            <summary>
            The user id of the current team owner
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.Team.GetTeamIconUrl">
            <summary>
            Returns the url for the team icon
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.TeamMember">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/teams#data-models-team-members-object">Team Members Object</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.MembershipState">
            <summary>
            The user's membership state on the team
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.Permissions">
            <summary>
            The teams permissions
            Will always be ["*"]
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.TeamId">
            <summary>
            The id of the parent team of which they are a member
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Teams.TeamMember.User">
            <summary>
            The avatar, discriminator, id, and username of the user
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum">Membership State Enum</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState.Invited">
            <summary>
            If the user has been invited
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Teams.TeamMembershipState.Accepted">
            <summary>
            If the is part of the team
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.Connection">
            <summary>
            Represents a Discord Users <a href="https://discord.com/developers/docs/resources/user#connection-object">Connection</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Id">
            <summary>
            ID of the connection account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Name">
            <summary>
            The username of the connection account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Type">
            <summary>
            The service of the connection (twitch, youtube)
            <see cref="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Revoked">
            <summary>
            Whether the connection is revoked
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Integrations">
            <summary>
            An array of partial server integrations
            <see cref="T:Oxide.Ext.Discord.Entities.Integrations.Integration"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Verified">
            <summary>
            Whether the connection is verified
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.FriendSync">
            <summary>
            Whether friend sync is enabled for this connection
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.ShowActivity">
            <summary>
            Whether activities related to this connection will be shown in presence updates
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.Connections.Connection.Visibility">
            <summary>
            Visibility of this connection
            <see cref="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType"/>
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType">
            <summary>
            Represents a <a href="https://discord.com/developers/docs/resources/user#connection-object-connection-structure">Connection Type</a> for a connection
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Twitch">
            <summary>
            Connection type is Twitch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionType.Youtube">
            <summary>
            Connection type is Youtube
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType">
            <summary>
            Represents connection <a href="https://discord.com/developers/docs/resources/user#connection-object-visibility-types">Visibility Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType.None">
            <summary>
            Invisible to everyone except the user themselves
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.Connections.ConnectionVisibilityType.Everyone">
            <summary>
            Visible to everyone
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.DiscordUser">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/user#user-object">User Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Id">
            <summary>
            The user's id
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Username">
            <summary>
            The user's username, not unique across the platform
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Discriminator">
            <summary>
            The user's 4-digit discord-tag
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Avatar">
            <summary>
            The user's avatar hash
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Bot">
            <summary>
            Whether the user belongs to an OAuth2 application
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.System">
            <summary>
            Whether the user is an Official Discord System user (part of the urgent message system)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.MfaEnabled">
            <summary>
            Whether the user has two factor enabled on their account
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Locale">
            <summary>
            The user's chosen language option
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Verified">
            <summary>
            Whether the email on this account has been verified
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Email">
            <summary>
            The user's email
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.Flags">
            <summary>
            The flags on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.PremiumType">
            <summary>
            The type of Nitro subscription on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserPremiumType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.PublicFlags">
            <summary>
            The public flags on a user's account
            <see cref="T:Oxide.Ext.Discord.Entities.Users.UserFlags"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetDefaultAvatarUrl">
            <summary>
            Default Avatar Url for the User
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetAvatarUrl">
            <summary>
            Avatar Url for the user
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetCurrentUser(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Users.DiscordUser},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the currently logged in user account
            See <a href="https://discord.com/developers/docs/resources/user#get-current-user">Get Current User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the logged in user</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetUser(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Users.DiscordUser},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the user for the given user Id
            See <a href="https://discord.com/developers/docs/resources/user#get-user">Get User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to lookup</param>
            <param name="callback">Callback with the looked up user</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.ModifyCurrentUser(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Users.DiscordUser},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the currently logged in user with the currently set UserName and Avatar
            See <a href="https://discord.com/developers/docs/resources/user#modify-current-user">Modify Current User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the updated user</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.ModifyCurrentUser(Oxide.Ext.Discord.DiscordClient,System.String,System.String,System.Action{Oxide.Ext.Discord.Entities.Users.DiscordUser},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify the currently logged in user
            See <a href="https://discord.com/developers/docs/resources/user#modify-current-user">Modify Current User</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="username">Username to set</param>
            <param name="avatarData">Avatar data to set</param>
            <param name="callback">Callback with the updated user</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetCurrentUserGuilds(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Guilds.Guild}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the guilds for the currently logged in user
            See <a href="https://discord.com/developers/docs/resources/user#get-current-user-guilds">Get Current User Guilds</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the list of guilds</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.LeaveGuild(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Guilds.Guild,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Leave the guild that the currently logged in user is in
            See <a href="https://discord.com/developers/docs/resources/user#leave-guild">Leave Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guild">Guild to leave</param>
            <param name="callback">callback when the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.LeaveGuild(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Leave the guild that the currently logged in user is in
            See <a href="https://discord.com/developers/docs/resources/user#leave-guild">Leave Guild</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to leave</param>
            <param name="callback">callback when the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateDirectMessage(Oxide.Ext.Discord.DiscordClient,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a Direct Message to the current User
            See <a href="https://discord.com/developers/docs/resources/user#create-dm">Create DM</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the direct message channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateDirectMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a Direct Message to the current User
            See <a href="https://discord.com/developers/docs/resources/user#create-dm">Create DM</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="userId">User ID to send the message to</param>
            <param name="callback">Callback with the direct message channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.CreateGroupDm(Oxide.Ext.Discord.DiscordClient,System.String[],System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Users.NickId},System.Action{Oxide.Ext.Discord.Entities.Channels.Channel},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a Group Direct Message
            </summary>
            <param name="client">Client to use</param>
            <param name="accessTokens">access tokens of users that have granted your app the gdm.join scope</param>
            <param name="nicks">a list of user ids to their respective nicknames</param>
            <param name="callback">Callback with the direct message channel</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetUserConnections(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Users.Connections.Connection}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of connection objects.
            Requires the connections OAuth2 scope.
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with the list of connections</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmAddRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Channel,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to add recipient to</param>
            <param name="accessToken">Users access token</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmAddRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Adds a recipient to a Group DM using their access token
            See <a href="https://discord.com/developers/docs/resources/channel#group-dm-add-recipient">Group DM Add Recipient</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to add user to</param>
            <param name="accessToken">Users access token</param>
            <param name="nick">User nickname</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmRemoveRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Channels.Channel,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Removes a recipient from a Group DM
            </summary>
            <param name="client">Client to use</param>
            <param name="channel">Channel to remove recipient from</param>
            <param name="callback">callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GroupDmRemoveRecipient(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Removes a recipient from a Group DM
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to remove recipient from</param>
            <param name="callback">callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Users.DiscordUser.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.NickId">
            <summary>
            Represents a User ID and Nick Name
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.NickId.Id">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Users.NickId.Nick">
            <summary>
            User Nickname
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserFlags">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/user#user-object-user-flags">User Flags</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.None">
            <summary>
            Default value for flags, when none are given to an account.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.DiscordEmployee">
            <summary>
            Flag given to users who are a Discord employee.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.PartneredServerOwner">
            <summary>
            Flag given to users who are owners of a partnered Discord server.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HyperSquadEvents">
            <summary>
            Flag given to users in HypeSquad events.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.BugHunterLevel1">
            <summary>
            Flag given to users who have participated in the bug report program and are level 1.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBravery">
            <summary>
            Flag given to users who are in the HypeSquad House of Bravery.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBrilliance">
            <summary>
            Flag given to users who are in the HypeSquad House of Brilliance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.HouseBalance">
            <summary>
            Flag given to users who are in the HypeSquad House of Balance.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.EarlySupporter">
            <summary>
            Flag given to users who subscribed to Nitro before games were added.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.TeamUser">
            <summary>
            Flag given to users who are part of a team.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.System">
            <summary>
             Flag given to users who represent Discord (System).
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.BugHunterLevel2">
            <summary>
            Flag given to users who have participated in the bug report program and are level 2.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.VerifiedBot">
            <summary>
            Flag given to users who are verified bots.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserFlags.EarlyVerifiedBotDeveloper">
            <summary>
             Flag given to users that developed bots and early verified their accounts.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.UserPremiumType">
            <summary>
            Represents Discord User <a href="https://discord.com/developers/docs/resources/user#user-object-premium-types">Premium Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.None">
            <summary>
            User has no premium
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.NitroClassic">
            <summary>
            User has nitro classic premium
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.UserPremiumType.Nitro">
            <summary>
            User has nitro premium
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Users.StatusType">
            <summary>
            Represents Discord User <a href="https://discord.com/developers/docs/topics/gateway#update-status-status-types">Status Types</a> 
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.StatusType.Online">
            <summary>
            User is online
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.StatusType.DND">
            <summary>
            User has Do Not Disturb
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.StatusType.Idle">
            <summary>
            User is idle
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.StatusType.Invisible">
            <summary>
            User is invisible
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Users.StatusType.Offline">
            <summary>
            User is offline
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Voice.VoiceRegion">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/voice#voice-region-object">Voice Region Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Id">
            <summary>
            Unique ID for the region
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Name">
            <summary>
            Name of the region
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Vip">
            <summary>
            True if this is a vip-only server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Optimal">
            <summary>
            True for a single server that is closest to the current user's client
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Deprecated">
            <summary>
            Whether this is a deprecated voice region (avoid switching to these)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.Custom">
            <summary>
            Whether this is a custom voice region (used for events/etc)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Voice.VoiceRegion.ListVoiceRegions(Oxide.Ext.Discord.DiscordClient,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Voice.VoiceRegion}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns an array of voice region objects that can be used when creating servers.
            See <a href="https://discord.com/developers/docs/resources/voice#list-voice-regions">List Voice Regions</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback with a list of voice regions</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Voice.VoiceState">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/voice#voice-state-object">Voice State Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.GuildId">
            <summary>
            The guild id this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.ChannelId">
            <summary>
            The channel id this user is connected to
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.UserId">
            <summary>
            The user id this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Member">
            <summary>
            The guild member this voice state is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SessionId">
            <summary>
            The session id for this voice state
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Deaf">
            <summary>
            Whether this user is deafened by the server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Mute">
            <summary>
            Whether this user is muted by the server
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfDeaf">
            <summary>
            Whether this user is locally deafened
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfMute">
            <summary>
            Whether this user is locally muted
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfStream">
            <summary>
            Whether this user is streaming using "Go Live"
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.SelfVideo">
            <summary>
            Whether this user's camera is enabled
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Voice.VoiceState.Suppress">
            <summary>
            Whether this user is muted by the current user
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Voice.VoiceState.GetEntityId">
            <summary>
            Returns the ID for this entity
            </summary>
            <returns>ID for this entity</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.Webhook">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#webhook-object">Webhook Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.Id">
            <summary>
            The id of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.Type">
            <summary>
            The type of the webhook
            See <see cref="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookType"/>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GuildId">
            <summary>
            The guild id this webhook is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ChannelId">
            <summary>
            The channel id this webhook is for
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.User">
            <summary>
            The user this webhook was created by
            not returned when getting a webhook with its token
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.Name">
            <summary>
            The default name of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.Avatar">
            <summary>
            The default avatar of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.Token">
            <summary>
            The secure token of the webhook
            returned for Incoming Webhooks
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ApplicationId">
            <summary>
            The bot/OAuth2 application that created this webhook
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.CreateWebhook(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.String,System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Create a new webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#create-webhook">Create Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID for the webhook</param>
            <param name="name">Name of the webhook (1-80 characters)</param>
            <param name="avatar">Image for the default webhook avatar</param>
            <param name="callback">Callback with the completed webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GetChannelWebhooks(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Webhooks.Webhook}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of channel webhook.
            See <a href="https://discord.com/developers/docs/resources/webhook#get-channel-webhooks">Get Channel Webhooks</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="channelId">Channel ID to get webhooks for</param>
            <param name="callback">Callback with a list of channel webhooks</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GetGuildWebhooks(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Webhooks.Webhook}},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns a list of guild webhooks
            See <a href="https://discord.com/developers/docs/resources/webhook#get-guild-webhooks">Get Guild Webhooks</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="guildId">Guild ID to get webhooks for</param>
            <param name="callback">Callback with the list of guild webhooks</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GetWebhook(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the webhook with the given webhook ID
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook">Get Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookId">Webhook ID to get</param>
            <param name="callback">Callback with the webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GetWebhookWithToken(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.String,System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the webhook with the given ID &amp; Token
            This call does not required authentication
            No user is returned in webhook object
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook-with-token">Get Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookId">Webhook ID to get</param>
            <param name="webhookToken">Webhook Token</param>
            <param name="callback">Callback with the webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.GetWebhookWithUrl(Oxide.Ext.Discord.DiscordClient,System.String,System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Returns the webhook with the given ID &amp; Token
            This call does not required authentication
            No user is returned in webhook object
            See <a href="https://discord.com/developers/docs/resources/webhook#get-webhook-with-token">Get Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="webhookUrl">Returns the webhook for the specified URL</param>
            <param name="callback">Callback with the webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ModifyWebhook(Oxide.Ext.Discord.DiscordClient,System.String,System.String,System.Nullable{Oxide.Ext.Discord.Entities.Snowflake},System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#modify-webhook">Modify Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="name">New webhook name</param>
            <param name="avatar">New avatar image</param>
            <param name="channelId">Channel to move the webhook to</param>
            <param name="callback">Callback with the updated webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ModifyWebhookWithToken(Oxide.Ext.Discord.DiscordClient,System.String,System.String,System.Action{Oxide.Ext.Discord.Entities.Webhooks.Webhook},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Modify a webhook.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token">Modify Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="name">New webhook name</param>
            <param name="avatar">New avatar image</param>
            <param name="callback">Callback with the updated webhook</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.DeleteWebhook(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a webhook permanently.
            Requires the MANAGE_WEBHOOKS permission.
            See <a href="https://discord.com/developers/docs/resources/webhook#delete-webhook">Delete Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.DeleteWebhookWithToken(Oxide.Ext.Discord.DiscordClient,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Delete a webhook permanently.
            Does not require authentication.
            See <a href="https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token">Delete Webhook with Token</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ExecuteWebhook(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError},Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="payload">Message data</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="sendType">Which type of webhook to execute</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.ExecuteWebhook(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError},Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType)">
            <summary>
            Executes a webhook
            See <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook">Execute Webhook</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="payload">Message data</param>
            <param name="callback">Callback with the created message</param>
            <param name="sendType">Which type of webhook to execute</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.EditWebhookMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage,System.Action{Oxide.Ext.Discord.Entities.Messages.Message},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Edits a previously-sent webhook message from the same token.
            See <a href="https://discord.com/developers/docs/resources/webhook#edit-webhook-message">Edit Webhook Message</a>
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to edit</param>
            <param name="payload">The updated message</param>
            <param name="callback">Callback with the edited message</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.Webhook.DeleteWebhookMessage(Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Snowflake,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Deletes a message that was created by the webhook.
            </summary>
            <param name="client">Client to use</param>
            <param name="messageId">Message ID to delete</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Callback when an error occurs with error information</param>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#execute-webhook-jsonform-params">Webhook Create Message</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.Username">
            <summary>
            Override the default username of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.AvatarUrl">
            <summary>
            Override the default avatar of the webhook
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookCreateMessage.Tts">
            <summary>
            If this is a TTS message
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#edit-webhook-message-jsonform-params">Webhook Edit Message Structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Content">
            <summary>
            The message contents (up to 2000 characters)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.Embeds">
            <summary>
            Embedded rich content (Up to 10 embeds)
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.AllowedMention">
            <summary>
            Allowed mentions for the message
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Entities.Webhooks.WebhookEditMessage.AddEmbed(Oxide.Ext.Discord.Entities.Messages.Embeds.Embed)">
            <summary>
            Adds a new embed to the list of embed to send
            </summary>
            <param name="embed">Embed to add</param>
            <returns>This</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown if more than 10 embeds are added in a send as that is the discord limit</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType">
            <summary>
            Use to control which webhook execute url to call
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Discord">
            <summary>
            Webhook is for Discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Slack">
            <summary>
            Webhook is for slack
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookSendType.Github">
            <summary>
            Webhook is for github
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Entities.Webhooks.WebhookType">
            <summary>
            Represents <a href="https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types">Webhook Types</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookType.Incoming">
            <summary>
            Incoming Webhooks can post messages to channels with a generated token
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Entities.Webhooks.WebhookType.ChannelFollower">
            <summary>
            Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.DiscordUserExt">
            <summary>
            Adds extension methods to Discord User to allow sending server chat commands to the player
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.SendChatMessage(Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String)">
            <summary>
            Send chat message to the user if they're connected
            </summary>
            <param name="user">User to send the message to on the server</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.SendChatMessage(Oxide.Ext.Discord.Entities.Users.DiscordUser,System.String,System.String,System.Object[])">
            <summary>
            Send chat message to the user if they're connected
            </summary>
            <param name="user">User to send the message to on the server</param>
            <param name="message">Message to send</param>
            <param name="prefix">Message Prefix</param>
            <param name="args">Message Args</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.DiscordUserExt.GetPlayer(Oxide.Ext.Discord.Entities.Users.DiscordUser)">
            <summary>
            Get's the IPlayer for the given discord user
            </summary>
            <param name="user">User to get IPlayer for</param>
            <returns>IPlayer if discord user is linked; null otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.EnumExt">
            <summary>
            Extensions for enums
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.EnumExt.TryParse``1(System.String,``0@)">
            <summary>
            Try to parse the enum value from string value
            </summary>
            <param name="value">string to parse</param>
            <param name="result">Resulting enum value</param>
            <typeparam name="TEnum">Enum Type</typeparam>
            <returns>True if successfully parsed; false otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.HashExt">
            <summary>
            Hash extensions
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.HashExt.RemoveAll``2(Oxide.Plugins.Hash{``0,``1},System.Func{``1,System.Boolean})">
            <summary>
            Remove all records from the hash with the given predicate filter
            </summary>
            <param name="hash">Hash to have data removed from</param>
            <param name="predicate">Filter of which values to remove</param>
            <typeparam name="TKey">Key type of the hash</typeparam>
            <typeparam name="TValue">Value type of the hash</typeparam>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.IPlayerExt">
            <summary>
            IPlayer Extensions for sending Discord Message to an IPlayer
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IPlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.DiscordClient,System.String)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IPlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.Embeds.Embed)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="embed">Embed to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IPlayerExt.SendDiscordMessage(Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.DiscordClient,Oxide.Ext.Discord.Entities.Messages.MessageCreate)">
            <summary>
            Send a Discord Message to an IPlayer if they're registered
            </summary>
            <param name="player">Player to send the discord message to</param>
            <param name="client">Client to use for sending the message</param>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IPlayerExt.GetUser(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns a DiscordUser with the ID populated if linked
            </summary>
            <param name="player">Player to get user for</param>
            <returns>Discord User if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.IPlayerExt.GetUserId(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns the Discord ID of the IPlayer if linked
            </summary>
            <param name="player">Player to get Discord ID for</param>
            <returns>Discord ID if linked; null otherwise</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Extensions.StringExt">
            <summary>
            String Extension methods
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Extensions.StringExt.ParseCommand(System.String,System.String@,System.String[]@)">
            <summary>
            Parses the specified command into uMod command format
            Sourced from RustCore.cs of OxideMod (https://github.com/theumod/uMod.Rust/blob/oxide/src/RustCore.cs)
            </summary>
            <param name="argStr"></param>
            <param name="command"></param>
            <param name="args"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn">
            <summary>
            Represents Discord <a href="https://discord.com/developers/docs/reference#image-formatting-cdn-endpoints">CDN Endpoints</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.CdnUrl">
            <summary>
            Base CDN Url
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetCustomEmojiUrl(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url to the custom emoji
            </summary>
            <param name="emojiId">ID of the emoji</param>
            <param name="format">The format the emoji is in</param>
            <returns>Url of the emoji</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Jpg or WebP</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetGuildIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url to the Guild Icon
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildIcon">Guild Icon from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild icon</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetGuildSplashUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url of the Guild Splash
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildSplash">Guild Splash from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild splash</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetGuildDiscoverySplashUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Return the Url of the Guild Discovery Splash
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildDiscoverySplash">Guild Discovery Splash from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild discovery splash</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetGuildBannerUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url of the Guild Banner
            </summary>
            <param name="guildId">Guild ID for the icon</param>
            <param name="guildBanner">Guild Banner from guild</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the guild banner</returns>
            <exception cref="T:System.ArgumentException">Thrown if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetUserDefaultAvatarUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String)">
            <summary>
            Returns the Url of the users default avatar
            </summary>
            <param name="userId">Discord User ID</param>
            <param name="userDiscriminator">Discord User Discriminator</param>
            <returns>Url of the default avatar url</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetUserAvatarUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url of the users avatar
            </summary>
            <param name="userId">Discord User ID</param>
            <param name="userAvatar">User avatar from user</param>
            <param name="format">Format the avatar is in</param>
            <returns>Url of the users avatar</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetApplicationIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the url to the application icon
            </summary>
            <param name="applicationId">Application ID</param>
            <param name="icon">Icon field from application</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the application icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetApplicationAssetUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the applications asset icon url
            </summary>
            <param name="applicationId">Application ID of the icon</param>
            <param name="assetId">Asset ID for the application</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the application asset icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetAchievementIconUrl(Oxide.Ext.Discord.Entities.Snowflake,Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url of the Achievement Icon
            </summary>
            <param name="applicationId">Application ID of the icon</param>
            <param name="achievementId">Achievement ID</param>
            <param name="iconHash">Achievement Icon Hash</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the achievement icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetTeamIconUrl(Oxide.Ext.Discord.Entities.Snowflake,System.String,Oxide.Ext.Discord.Helpers.Cdn.ImageFormat)">
            <summary>
            Returns the Url of the Team Icon
            </summary>
            <param name="teamId">Team ID of the Icon</param>
            <param name="teamIcon">Icon field from Team</param>
            <param name="format">Format the icon is in</param>
            <returns>Url of the achievement icon</returns>
            <exception cref="T:System.ArgumentException">Throw if format is Gif</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Cdn.DiscordCdn.GetExtension(Oxide.Ext.Discord.Helpers.Cdn.ImageFormat,System.String)">
            <summary>
            Returns the extension to use for the image
            </summary>
            <param name="format">Image format that is requested</param>
            <param name="image">Image data from the field</param>
            <returns>Image extension for the image format and image data</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if Image Format is out of range</exception>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat">
            <summary>
            Represents <a href="https://discord.com/developers/docs/reference#image-formatting-image-formats">Image Formats</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat.Auto">
            <summary>
            Automatically pick the image format
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat.Jpg">
            <summary>
            Return image as a JPG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat.Png">
            <summary>
            Return image as PNG
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat.WebP">
            <summary>
            Return image as WebP
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Cdn.ImageFormat.Gif">
            <summary>
            Return image as GIF
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Converters.HashListConverter`1">
            <summary>
            Converts to and from a list in JSON to a hash
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.HashListConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write a hash as a list in JSON
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.HashListConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read an array in JSON as a hash
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.HashListConverter`1.CanConvert(System.Type)">
            <summary>
            Can we convert the given type
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Converters.SnowflakeConverter">
            <summary>
            Converts a snowflake to and from it's JSON string value
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.SnowflakeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON string and converts it to a snowflake
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:Newtonsoft.Json.JsonException"></exception>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.SnowflakeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes a snowflake as a JSON string
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Converters.SnowflakeConverter.CanConvert(System.Type)">
            <summary>
            Returns if we can convert this type
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Formatting">
            <summary>
            Represents <a href="https://discord.com/developers/docs/reference#message-formatting-formats">Message text formatting options</a>
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.MentionUser(System.String)">
            <summary>
            Mention the user with the given user ID
            </summary>
            <param name="userId">User ID to mention</param>
            <returns>Mention user formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.MentionUserNickname(System.String)">
            <summary>
            Mention the user displaying their user name
            </summary>
            <param name="userId">User ID to mention</param>
            <returns>Ping user formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.MentionChannel(System.String)">
            <summary>
            Mention the the channel with the given ID
            </summary>
            <param name="channelId">Channel ID to mention</param>
            <returns>Mention channel formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.MentionRole(System.String)">
            <summary>
            Mention the the role with the given ID
            </summary>
            <param name="roleId">Role ID to mention</param>
            <returns>Mention role formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.CustomEmoji(System.String,System.String)">
            <summary>
            Returns formatting string for custom emoji
            </summary>
            <param name="name">Name of the custom emoji</param>
            <param name="id">ID of the custom emoji</param>
            <returns>Custom emoji formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.CustomAnimatedEmoji(System.String,System.String)">
            <summary>
            Returns formatting string for animated custom emoji
            </summary>
            <param name="name">Name of the custom emoji</param>
            <param name="id">ID of the custom emoji</param>
            <returns>Animated custom emoji formatted string</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.Italics(System.String)">
            <summary>
            Will display the message in italics
            </summary>
            <param name="message">Message to make italics</param>
            <returns>Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.Bold(System.String)">
            <summary>
            Will display the message in bold
            </summary>
            <param name="message">Message to make bold</param>
            <returns>Bold formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.ItalicsBold(System.String)">
            <summary>
            Will display the message in italics and bold
            </summary>
            <param name="message">Message to make italics and bold</param>
            <returns>Bold and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.Underline(System.String)">
            <summary>
            Will display the message in underline
            </summary>
            <param name="message">Message to make underline</param>
            <returns>Underline formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.UnderlineItalics(System.String)">
            <summary>
            Will display the message in underline and italics
            </summary>
            <param name="message">Message to make underline and italics</param>
            <returns>Underline and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.UnderlineBold(System.String)">
            <summary>
            Will display the message in underline and bold
            </summary>
            <param name="message">Message to make underline and bold</param>
            <returns>Underline and bold formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.UnderlineBoldItalics(System.String)">
            <summary>
            Will display the message in underline and bold and italics
            </summary>
            <param name="message">Message to make underline and bold and italics</param>
            <returns>Underline and Bold and Italics formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.Strikethrough(System.String)">
            <summary>
            Will display the message with a strikethrough
            </summary>
            <param name="message">Message to make strikethrough</param>
            <returns>Strikethrough formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.CodeBlockOneLine(System.String)">
            <summary>
            Will display the message as a one line code block
            </summary>
            <param name="message">Message to make code block</param>
            <returns>Code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.CodeBlockMultiLine(System.String)">
            <summary>
            Will display the message as a multiline code block
            </summary>
            <param name="message">Message to make multiline code block</param>
            <returns>Code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.CodeBlockLanguage(System.String,System.String)">
            <summary>
            Will display a multiline code bloc with the specified language
            </summary>
            <param name="message">Message to make code block with language</param>
            <param name="language">Language to display the code block as</param>
            <returns>Language code block formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.BlockQuoteSingleLine(System.String)">
            <summary>
            Will display the message in single line block quote
            </summary>
            <param name="message">Message to make block quote</param>
            <returns>Block Quote formatted message</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Formatting.BlockQuoteMultiLine(System.String)">
            <summary>
            Will display the message in multiline block quote
            </summary>
            <param name="message">Message to make block quote</param>
            <returns>Multiline block quote formatted message</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Interfaces.IGetEntityId">
            <summary>
            Interface used to get the entity ID from an entity
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Interfaces.IGetEntityId.GetEntityId">
            <summary>
            Returns the unique ID for this entity
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Time">
            <summary>
            Helper methods relating to time
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Time.DiscordEpoch">
            <summary>
            DateTimeOffset since discord Epoch
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Helpers.Time.Epoch">
            <summary>
            DateTime since linux epoch
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Time.TimeSinceEpoch">
            <summary>
            Gets how many seconds since the linux epoch
            </summary>
            <returns>Seconds since linux epoch</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Time.TimeSinceEpoch(System.DateTime)">
            <summary>
            Gets the time since the linux epoch and the given date time
            </summary>
            <param name="time">DateTime to get total second for</param>
            <returns>Total seconds since linux epoch for date time</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Time.ToDateTime(System.Int32)">
            <summary>
            Converts the seconds since linux epoch to a DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Time.ToUnixTimeStamp(System.DateTime)">
            <summary>
            Gets the time since the linux epoch and the given date time
            </summary>
            <param name="date">DateTime to get total second for</param>
            <returns>Total seconds since linux epoch for date time</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Helpers.Validation">
            <summary>
            Provides helper methods for validation
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Helpers.Validation.ValidateEmoji(System.String)">
            <summary>
            Validates that the emoji string entered is valid.
            </summary>
            <param name="emoji"></param>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Command.BaseCommand">
            <summary>
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L76)
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Command.DiscordCommands">
            <summary>
            Represents a library for discord commands
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Libraries.Command.DiscordCommands._pluginRemovedFromManager">
            <summary>
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L104)
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.HasCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.HasDirectMessageCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.HasGuildCommands">
            <summary>
            Returns if there are any guild discord commands are registered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.AddDiscordDirectMessageCommand(System.String,Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds a discord direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L123)
            </summary>
            <param name="name"></param>
            <param name="plugin"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.AddDiscordDirectMessageCommand(System.String,Oxide.Core.Plugins.Plugin,System.Action{Oxide.Ext.Discord.Entities.Messages.Message,System.String,System.String[]})">
            <summary>
            Adds a discord direct message command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L134)
            </summary>
            <param name="command"></param>
            <param name="plugin"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.AddDiscordGuildCommand(System.String,Oxide.Core.Plugins.Plugin,System.String)">
            <summary>
            Adds a discord guild command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L123)
            </summary>
            <param name="name"></param>
            <param name="plugin"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.AddDiscordGuildCommand(System.String,Oxide.Core.Plugins.Plugin,System.Collections.Generic.List{Oxide.Ext.Discord.Entities.Snowflake},System.Action{Oxide.Ext.Discord.Entities.Messages.Message,System.String,System.String[]})">
            <summary>
            Adds a discord guild command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L134)
            </summary>
            <param name="command"></param>
            <param name="plugin"></param>
            <param name="allowedChannels"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.RemoveDiscordCommand(System.String,Oxide.Core.Plugins.Plugin)">
            <summary>
            Removes a previously registered discord command
            Sourced From Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L286)
            </summary>
            <param name="command"></param>
            <param name="plugin"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.RemoveDiscordCommand(Oxide.Ext.Discord.Libraries.Command.BaseCommand)">
            <summary>
            Removes a discord command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L314)
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.OnPluginRemovedFromManager(Oxide.Core.Plugins.Plugin,Oxide.Core.Plugins.PluginManager)">
            <summary>
            Called when a plugin has been removed from manager
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L377)
            </summary>
            <param name="sender"></param>
            <param name="manager"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.HandleDirectMessageCommand(Oxide.Ext.Discord.BotClient,Oxide.Ext.Discord.Entities.Messages.Message,Oxide.Ext.Discord.Entities.Channels.Channel,System.String,System.String[])">
            <summary>
            Handles the specified direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L361)
            </summary>
            <param name="client"></param>
            <param name="channel"></param>
            <param name="name"></param>
            <param name="args"></param>
            <param name="message"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Command.DiscordCommands.HandleGuildCommand(Oxide.Ext.Discord.BotClient,Oxide.Ext.Discord.Entities.Messages.Message,Oxide.Ext.Discord.Entities.Channels.Channel,System.String,System.String[])">
            <summary>
            Handles the specified direct message command
            Sourced from Command.cs of OxideMod (https://github.com/OxideMod/Oxide.Rust/blob/develop/src/Libraries/Command.cs#L361)
            </summary>
            <param name="client"></param>
            <param name="channel"></param>
            <param name="name"></param>
            <param name="args"></param>
            <param name="message"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Linking.DiscordLink">
            <summary>
            Represents a library for discord linking
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.Link">
            <summary>
            Linking Plugin
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.#ctor">
            <summary>
            Constructor for discord link
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsEnabled">
            <summary>
            Returns if there is a registered link plugin
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.AddLinkPlugin(Oxide.Core.Plugins.Plugin)">
            <summary>
            Adds a link plugin to be the plugin used with the Discord Link library
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(System.Object)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="id">ID of the steam or discord ID. Valid Types are String, Ulong, Snowflake</param>
            <returns>True if the ID is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(System.String)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="steamId">Steam ID of the player</param>
            <returns>True if the ID is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.IsLinked(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns if the specified ID is linked
            </summary>
            <param name="discordId">Discord ID of the player</param>
            <returns>True if the ID is linked; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetSteamId(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the Steam ID of the given Discord ID if there is a link
            </summary>
            <param name="discordId"></param>
            <returns>Steam ID of the given given discord ID if linked; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetPlayer(Oxide.Ext.Discord.Entities.Snowflake)">
            <summary>
            Returns the IPlayer for the given Discord ID
            </summary>
            <param name="discordId">Discord ID to get IPlayer for</param>
            <returns>IPlayer for the given Discord ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordId(System.String)">
            <summary>
            Returns the Discord ID for the given Steam ID
            </summary>
            <param name="steamId">Steam ID to get Discord ID for</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordId(Oxide.Core.Libraries.Covalence.IPlayer)">
            <summary>
            Returns the Discord ID for the given IPlayer
            </summary>
            <param name="player">Player to get Discord ID for</param>
            <returns>Discord ID for the given Steam ID; null otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetLinkedCount">
            <summary>
            Returns the number of linked players
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetLinkedSteamIds">
            <summary>
            Returns Steam ID's for all linked players
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetLinkedDiscordIds">
            <summary>
            Returns Discord ID's for all linked players
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetSteamToDiscordIds">
            <summary>
            Returns a Hash with a Steam ID key and Discord ID value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.DiscordLink.GetDiscordToSteamIds">
            <summary>
            Returns a Hash with a Discord ID key and Steam ID value
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin">
            <summary>
            Represents a plugin that supports Discord Link library
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin.GetSteamToDiscordIds">
            <summary>
            Returns a Hash of Steam ID's to Discord ID's
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin.GetDiscordToSteamIds">
            <summary>
            Returns a Hash of Discord ID's to Steam ID's
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.Libraries.Linking.IDiscordLinkPlugin.RegisterEvents(System.Action{Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Users.DiscordUser},System.Action{Oxide.Core.Libraries.Covalence.IPlayer,Oxide.Ext.Discord.Entities.Users.DiscordUser})">
            <summary>
            Called on a plugin to register events to be called when that plugin links or unlinks a Steam ID and Discord ID
            </summary>
            <param name="onLinked"></param>
            <param name="onUnlinked"></param>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.ILogger">
            <summary>
            Represents an interface for a logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Verbose(System.String)">
            <summary>
            Log a verbose message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Debug(System.String)">
            <summary>
            Log a Debug message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Info(System.String)">
            <summary>
            Log a Info message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Warning(System.String)">
            <summary>
            Log a Warning message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Error(System.String)">
            <summary>
            Log a Error message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.Exception(System.String,System.Exception)">
            <summary>
            Log a Exception message
            </summary>
            <param name="message">Message to log</param>
            <param name="ex">Exception to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.UpdateLogLevel(Oxide.Ext.Discord.Logging.LogLevel)">
            <summary>
            Updates the log level for the current logger
            </summary>
            <param name="level">Level to update the logger to</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.ILogger.IsLogging(Oxide.Ext.Discord.Logging.LogLevel)">
            <summary>
            Returns true if the logger is logging for the passed log level
            </summary>
            <param name="level">Log Level to check</param>
            <returns>True if the logger is logging for the given log level</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.Logger">
            <summary>
            Represents a discord extension logger
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.#ctor(Oxide.Ext.Discord.Logging.LogLevel)">
            <summary>
            Creates a new logger with the given log level
            </summary>
            <param name="logLevel">Log level of the logger</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Verbose(System.String)">
            <summary>
            Log a verbose message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Debug(System.String)">
            <summary>
            Log a Debug message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Info(System.String)">
            <summary>
            Log a Info message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Warning(System.String)">
            <summary>
            Log a Warning message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Error(System.String)">
            <summary>
            Log a Error message
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.Exception(System.String,System.Exception)">
            <summary>
            Log a Exception message
            </summary>
            <param name="message">Message to log</param>
            <param name="ex">Exception to log</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.UpdateLogLevel(Oxide.Ext.Discord.Logging.LogLevel)">
            <summary>
            Updates the log level for the current logger
            </summary>
            <param name="level">Level to update the logger to</param>
        </member>
        <member name="M:Oxide.Ext.Discord.Logging.Logger.IsLogging(Oxide.Ext.Discord.Logging.LogLevel)">
            <summary>
            Returns true if the logger is logging for the passed log level
            </summary>
            <param name="level">Log Level to check</param>
            <returns>True if the logger is logging for the given log level</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.Logging.LogLevel">
            <summary>
            Represents the log level for a logger
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Verbose">
            <summary>
            Verbose log level displays all message
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Debug">
            <summary>
            Debug log level display all messages up to and include Debug
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Info">
            <summary>
            Info log level display all messages up to and include Info
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Warning">
            <summary>
            Warning log level display all messages up to and include Warning
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Error">
            <summary>
            Error log level display all messages up to and include Error
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Exception">
            <summary>
            Exception log level display all messages up to and include Exception
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.Logging.LogLevel.Off">
            <summary>
            Disables all logging
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.BotGlobalRateLimit">
            <summary>
            Represents a global rate limit handler for a bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.BotGlobalRateLimit.Global">
            <summary>
            How many requests have been made globally for the bot since the last 60 second period wiped it
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.BotGlobalRateLimit.#ctor">
            <summary>
            Creates a new global rate limit for a bot
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.BotGlobalRateLimit.FiredRequest">
            <summary>
            Called when an API request is fired
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.BotGlobalRateLimit.ReachedRateLimit(System.Double)">
            <summary>
            Called if we receive a header notifying us of hitting the rate limit
            </summary>
            <param name="retryAfter">How long until we should retry API request again</param>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.BotGlobalRateLimit.HasReachedRateLimit">
            <summary>
            Returns true if we have reached the global rate limit 
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.BotGlobalRateLimit.NextBucketReset">
            <summary>
            Returns how long until the current rate limit period will expire
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.BotGlobalRateLimit.Shutdown">
            <summary>
            Called when a bot is shutting down
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.Bucket">
            <summary>
            Represents a discord API buck for a group of requests
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.BucketId">
            <summary>
            The ID of this bucket which is based on the route
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.RateLimit">
            <summary>
            The number of requests that can be made
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.RateLimitRemaining">
            <summary>
            How many requests are remaining before hitting the rate limit for the bucket
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.RateLimitReset">
            <summary>
            How long until the rate limit resets
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.ErrorResendDelayUntil">
            <summary>
            How long to wait before retrying request since there was a web exception
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.Bucket.Handler">
            <summary>
            Rest Handler for the bucker
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Bucket.#ctor(Oxide.Ext.Discord.REST.RestHandler,System.String,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new bucket for the given rest handler and bucket ID
            </summary>
            <param name="handler">Rest Handler for the bucket</param>
            <param name="bucketId">ID of the bucket</param>
            <param name="logger">Logger for the client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Bucket.Close">
            <summary>
            Close the bucket and abort the thread
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Bucket.ShouldCleanup">
            <summary>
            Returns if this bucket is ready to be cleaned up.
            Should be cleaned up if the thread is not null and the RateLimitReset has expired
            </summary>
            <returns>True if we should cleanup the bucket; false otherwise</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Bucket.Queue(Oxide.Ext.Discord.REST.Request)">
            <summary>
            Queues a new request for the buck
            </summary>
            <param name="request">Request to be queued</param>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.DiscordApiError">
            <summary>
            Represents and error from the discord API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.DiscordApiError.Code">
            <summary>
            Error code from the discord API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.DiscordApiError.Message">
            <summary>
            Error message from the discord API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.DiscordApiError.Errors">
            <summary>
            An JObject containing the errors that occured
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.RateLimit">
            <summary>
            Represents RateLimit entity when the rate limit is hit
            <a href="https://discord.com/developers/docs/topics/rate-limits#exceeding-a-rate-limit-rate-limit-response-structure">https://discord.com/developers/docs/topics/rate-limits#exceeding-a-rate-limit-rate-limit-response-structure</a>
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RateLimit.Message">
            <summary>
            A message saying you are being rate limited.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RateLimit.RetryAfter">
            <summary>
            The number of seconds to wait before submitting another request.
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RateLimit.Global">
            <summary>
            A value indicating if you are being globally rate limited or not
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.Request">
            <summary>
            Represent a Discord API request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Method">
            <summary>
            HTTP request method
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Route">
            <summary>
            Route on the API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.RequestUrl">
            <summary>
            Full Request URl to the API
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Headers">
            <summary>
            Header to be added to the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Data">
            <summary>
            Data to be sent with the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Response">
            <summary>
            Response from the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.Callback">
            <summary>
            Callback to call if the request completed successfully
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.OnError">
            <summary>
            Callback to call if the request errored with the last error message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.StartTime">
            <summary>
            The DateTime the request was started
            Used for request timeout
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.Request.InProgress">
            <summary>
            Returns if the request is currently in progress
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Request.#ctor(Oxide.Ext.Discord.REST.RequestMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Action{Oxide.Ext.Discord.REST.RestResponse},System.Action{Oxide.Ext.Discord.REST.RestError},Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new request
            </summary>
            <param name="method">HTTP method to call</param>
            <param name="route">Route to call on the API</param>
            <param name="headers">Headers to be added to the request</param>
            <param name="data">Data for the request</param>
            <param name="callback">Callback once the request completes successfully</param>
            <param name="onError">Callback when the request errors</param>
            <param name="logger">Logger for the request</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Request.Fire(Oxide.Ext.Discord.REST.Bucket)">
            <summary>
            Fires the request off
            </summary>
            <param name="bucket">Bucket the request is in</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Request.Close(System.Boolean)">
            <summary>
            Closes the request and removes it from the bucket
            </summary>
            <param name="remove"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.Request.HasTimedOut">
            <summary>
            Returns true if the request has timed out
            </summary>
            <returns></returns>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.RequestMethod">
            <summary>
            HTTP request method
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RequestMethod.GET">
            <summary>
            Request Method Get
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RequestMethod.POST">
            <summary>
            Request Method POST
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RequestMethod.PUT">
            <summary>
            Request Method PUT
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RequestMethod.PATCH">
            <summary>
            Request Method PATCH
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RequestMethod.DELETE">
            <summary>
            Request Method DELETE
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.RestError">
            <summary>
            Error object that is returned to the caller when a request fails
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.HttpStatusCode">
            <summary>
            HTTP Status code
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.RequestMethod">
            <summary>
            The request method that was called
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.Exception">
            <summary>
            The web exception from the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.Url">
            <summary>
            The URI that was called
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.Data">
            <summary>
            What data was passed to the request
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.DiscordError">
            <summary>
            If discord returned an error this will contain that error message
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestError.Message">
            <summary>
            Full string response if we received one
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestError.#ctor(System.Net.WebException,System.Uri,Oxide.Ext.Discord.REST.RequestMethod,System.Object)">
            <summary>
            Creates a new rest error
            </summary>
            <param name="exception">The web exception we received</param>
            <param name="url">Url that was called</param>
            <param name="requestMethod">Request method that was used</param>
            <param name="data">Data passed to the request</param>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.RestHandler">
            <summary>
            Represents a REST handler for a bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RestHandler.RateLimit">
            <summary>
            Global Rate Limit for the bot
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.REST.RestHandler.Buckets">
            <summary>
            The request buckets for the bot
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.#ctor(Oxide.Ext.Discord.BotClient,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new REST handler for a bot client
            </summary>
            <param name="client">Client the request is for</param>
            <param name="logger">Logger from the client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.DoRequest(System.String,Oxide.Ext.Discord.REST.RequestMethod,System.Object,System.Action,System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Creates a new request and queues it to be ran
            </summary>
            <param name="url">URL of the request</param>
            <param name="method">HTTP method of the request</param>
            <param name="data">Data to be sent with the request</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Error callback if an error occurs</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.DoRequest``1(System.String,Oxide.Ext.Discord.REST.RequestMethod,System.Object,System.Action{``0},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Creates a new request and queues it to be ran
            </summary>
            <param name="url">URL of the request</param>
            <param name="method">HTTP method of the request</param>
            <param name="data">Data to be sent with the request</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Error callback if an error occurs</param>
            <typeparam name="T">The type that is expected to be returned</typeparam>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.CreateRequest(Oxide.Ext.Discord.REST.RequestMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Action{Oxide.Ext.Discord.REST.RestResponse},System.Action{Oxide.Ext.Discord.REST.RestError})">
            <summary>
            Creates a new request and queues it to be ran
            </summary>
            <param name="url">URL of the request</param>
            <param name="method">HTTP method of the request</param>
            <param name="headers">Headers to be sent in the request</param>
            <param name="data">Data to be sent with the request</param>
            <param name="callback">Callback once the action is completed</param>
            <param name="onError">Error callback if an error occurs</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.CleanupExpired">
            <summary>
            Removed buckets that are old and not being used
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.QueueRequest(Oxide.Ext.Discord.REST.Request,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Queues the request
            </summary>
            <param name="request">Request to queue</param>
            <param name="logger">Logger to use</param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestHandler.Shutdown">
            <summary>
            Shutdown the REST handler
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.REST.RestResponse">
            <summary>
            Represents a REST response from discord
            </summary>
        </member>
        <member name="P:Oxide.Ext.Discord.REST.RestResponse.Data">
            <summary>
            Data discord sent us
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestResponse.#ctor(System.String)">
            <summary>
            Create new REST response with the given data
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.REST.RestResponse.ParseData``1">
            <summary>
            Parse the data to it's given object
            </summary>
            <typeparam name="T">Type to be parsed as</typeparam>
            <returns>Data string parsed to JSON</returns>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.Socket">
            <summary>
            Represents a websocket that connects to discord
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Socket.RequestReconnect">
            <summary>
            If we should attempt to reconnect to discord on disconnect
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Socket.ShouldAttemptResume">
            <summary>
            If we should attempt to resume our previous session after connecting
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.Socket.ReconnectTimer">
            <summary>
            Timer to use when attempting to reconnect to discord due to an error
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.#ctor(Oxide.Ext.Discord.BotClient,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Socket used by the BotClient
            </summary>
            <param name="client">Client using the socket</param>
            <param name="logger">Logger for the bot client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.Connect">
            <summary>
            Connect tot the websocket
            </summary>
            <exception cref="T:System.Exception">Thrown if the socket still exists. Must call disconnect before trying to connect</exception>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.Disconnect(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Disconnects the websocket from discord
            </summary>
            <param name="attemptReconnect">Should we attempt to reconnect to discord after disconnecting</param>
            <param name="shouldResume">Should we attempt to resume our previous session</param>
            <param name="requested">If discord requested that we reconnect to discord</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.Shutdown">
            <summary>
            Shutdowns the websocket completely. Used when bot is being shutdown
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.DisposeSocket">
            <summary>
            Disposes of the previous websocket
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.Send(Oxide.Ext.Discord.Entities.Gatway.Commands.GatewayCommandCode,System.Object,System.Action{System.Boolean})">
            <summary>
            Send a command to discord over the websocket
            </summary>
            <param name="opCode">Command code to send</param>
            <param name="data">Data to send</param>
            <param name="completed">Action once the action is completed and if it was successful</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.IsAlive">
            <summary>
            Returns if the websocket is in the open state
            </summary>
            <returns>Returns if the websocket is in open state</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.IsConnecting">
            <summary>
            Returns if the websocket is in the connecting state
            </summary>
            <returns>Returns if the websocket is in connecting state</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.IsClosingOrClosed">
            <summary>
            Returns if the websocket is null or is currently closing / closed
            </summary>
            <returns>Returns if the websocket is null or is currently closing / closed</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.IsReconnectTimerActive">
            <summary>
            Returns if there is a reconnect timer active for the websocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.Socket.StartReconnectTimer(System.Single,System.Action)">
            <summary>
            Starts a reconnect timer to reconnect to perform the reconnect action after the timer has elapsed
            </summary>
            <param name="seconds">How many seconds until we fire the action</param>
            <param name="callback">Callback to run once the timer is completed</param>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.SocketCloseCode">
            <summary>
            Represents <a href="https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-close-event-codes">Socket Close Event Codes</a>
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.UnknownError">
            <summary>
            We're not sure what went wrong. Try reconnecting?
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.UnknownOpcode">
            <summary>
            You sent an invalid Gateway opcode or an invalid payload for an opcode. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.DecodeError">
            <summary>
            You sent an invalid payload to us. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.NotAuthenticated">
            <summary>
            You sent us a payload prior to identifying.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.AuthenticationFailed">
            <summary>
            The account token sent with your identify payload is incorrect.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.AlreadyAuthenticated">
            <summary>
            You sent more than one identify payload. Don't do that!
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.InvalidSequence">
            <summary>
            The sequence sent when resuming the session was invalid. Reconnect and start a new session.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.RateLimited">
            <summary>
            Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.SessionTimedOut">
            <summary>
            Your session timed out. Reconnect and start a new one.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.InvalidShard">
            <summary>
            You sent us an invalid shard when identifying.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.ShardingRequired">
            <summary>
            The session would have handled too many guilds - you are required to shard your connection in order to connect.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.InvalidApiVersion">
            <summary>
            You sent an invalid version for the gateway.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.InvalidIntents">
            <summary>
            You sent an invalid intent for a Gateway Intent. You may have incorrectly calculated the bitwise value.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.DisallowedIntent">
            <summary>
            You sent a disallowed intent for a Gateway Intent. You may have tried to specify an intent that you have not enabled or are not whitelisted for.
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketCloseCode.UnknownCloseCode">
            <summary>
            Used when a code is sent that we don't have yet.
            </summary>
        </member>
        <member name="T:Oxide.Ext.Discord.WebSockets.SocketListener">
            <summary>
            Represents a listens for socket events
            </summary>
        </member>
        <member name="F:Oxide.Ext.Discord.WebSockets.SocketListener.Retries">
            <summary>
            How many times we have tried to reconnect to discord unsuccessfully
            </summary>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.#ctor(Oxide.Ext.Discord.BotClient,Oxide.Ext.Discord.WebSockets.Socket,Oxide.Ext.Discord.Logging.ILogger)">
            <summary>
            Creates a new socket listener
            </summary>
            <param name="client">Client this listener is for</param>
            <param name="socket">Socket this listener is for</param>
            <param name="logger">Logger for the client</param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.SocketOpened(System.Object,System.EventArgs)">
            <summary>
            Called when a socket is open
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.SocketClosed(System.Object,WebSocketSharp.CloseEventArgs)">
            <summary>
            Called when a socket is closed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.HandleDiscordClosedSocket(System.Int32,System.String)">
            <summary>
            Parse out the closing reason if discord closed the socket
            </summary>
            <param name="code">Socket close code</param>
            <param name="reason">Socket close reason</param>
            <returns>True if discord closed the socket with one of it's close codes</returns>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.SocketErrored(System.Object,WebSocketSharp.ErrorEventArgs)">
            <summary>
            Called when an error occurs on a socket
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.SocketMessage(System.Object,WebSocketSharp.MessageEventArgs)">
            <summary>
            Called when a socket receives a message
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Oxide.Ext.Discord.WebSockets.SocketListener.HandleDispatchPresenceUpdate(Oxide.Ext.Discord.Entities.Gatway.EventPayload)">
            <summary>
             * From Discord API docs:
             * The user object within this event can be partial, the only field which must be sent is the id field, everything else is optional.
             * Along with this limitation, no fields are required, and the types of the fields are not validated.
             * Your client should expect any combination of fields and types within this event
            </summary>
            <param name="payload"></param>
            https://discord.com/developers/docs/topics/gateway#presence-update
        </member>
    </members>
</doc>
